(* ::Package:: *)

(* ::Input:: *)
(*(*\:0417\:0430\:0433\:0440\:0443\:0436\:0443 \:043c\:043e\:0434\:0435\:043b\:044c\:043a\:0443 \:0447\:0435\:043b\:043d\:043e\:043a\:0430 \:0438\:0437 \:0431\:0430\:0437\:044b Wolfram*)*)
(*shuttle=ExampleData[{"Geometry3D","SpaceShuttle"},"GraphicsComplex"];*)
(**)
(**)
(*(*\:0412\:044b\:0434\:0435\:043b\:044e \:0432 \:043e\:0442\:0434\:0435\:043b\:044c\:043d\:044b\:0435 \:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:044b\:0435 \:044d\:043b\:0435\:043c\:0435\:043d\:0442\:044b \:043c\:043e\:0434\:0435\:043b\:044c\:043a\:0438*)*)
(*points=shuttle[[1]];*)
(*faces=shuttle[[2]];*)
(**)
(**)
(*(*\:0421\:043e\:0437\:0434\:0430\:043c \:0444\:0443\:043d\:043a\:0446\:0438\:0438 \:043f\:0440\:0435\:043e\:0431\:0440\:0430\:0437\:043e\:0432\:0430\:043d\:0438\:044f \:043a\:043e\:043e\:0440\:0434\:0438\:043d\:0430\:0442 \:0442\:043e\:0447\:0435\:043a*)*)
(**)
(*(*func[] \:043f\:043e\:0432\:043e\:0440\:0430\:0447\:0438\:0432\:0430\:0435\:0442 \:043a\:0440\:044b\:043b\:044c\:044f \:0448\:0430\:0442\:0442\:043b\:0430*)*)
(*func[point_,angle_]:=If[point[[2]]>1.56,*)
(*RotationTransform[angle,{1,0,0},{0,1.56,-1.}][point],*)
(*If[point[[2]]<-1.56,*)
(*RotationTransform[angle,{1,0,0},{0,-1.56,-1.}][point],*)
(*point*)
(*]*)
(*]*)
(**)
(**)
(*(*\:044d\:0442\:043e \:0444\:0443\:043d\:043a\:0446\:0438\:044f \:0440\:0435\:0430\:043b\:0438\:0437\:0430\:0446\:0438\:0438 \:044d\:0444\:0444\:0435\:043a\:0442\:0430 \:0441\:043c\:0438\:043d\:0430\:043d\:0438\:044f \:043a\:043e\:0440\:043f\:0443\:0441\:0430 \:043f\:0440\:0438 \:0443\:0434\:0430\:0440\:0435 \:043e \:0441\:0442\:0435\:043d\:0443. \:0445 - \:043a\:043e\:043e\:0440\:0434\:0438\:043d\:0430\:0442\:0430 \:0441\:0442\:0435\:043d\:044b*)*)
(*collision[point_,x_]:=If[point[[1]]<x,{x+RandomReal[{0,1}],point[[2]]+RandomReal[{-1,1}],point[[3]]+RandomReal[{-1,1}]},point]*)
(**)
(**)
(*(*\:0447\:0438\:0441\:0442\:043e \:0433\:0440\:0430\:0444\:0438\:0447\:0435\:0441\:043a\:0430\:044f \:0444\:0443\:043d\:043a\:0446\:0438\:044f - \:0441\:043e\:0437\:0434\:0430\:044e\:0442\:0441\:044f \:0432\:0441\:043f\:044b\:0448\:043a\:0438 \:043e\:0442 \:0432\:0437\:0440\:044b\:0432\:0430 \:0447\:0435\:043b\:043d\:043e\:043a\:0430 :3*)*)
(*flashes[point_,x_]:=If[point[[1]]<x,{Opacity[0.5],RandomChoice[{Yellow,Red,Orange}],Sphere[{x+RandomReal[{0,1}],point[[2]]+RandomReal[{-1,1}],point[[3]]+RandomReal[{-1,1}]}]}*)
(*,Nothing]*)
(**)
(**)
(*(*\:0421\:043e\:0437\:0434\:0430\:044e \:043c\:0430\:0441\:0441\:0438\:0432 \:0438\:0437 3D-\:043a\:0430\:0434\:0440\:043e\:0432 \:0434\:043b\:044f Rainbow_Shuttle. \:042d\:0442\:043e ~ \:0444\:043e\:0440\:043c\:0430\:0442 vtk*)*)
(*shots=Table[*)
(*With[{color=ColorData["Rainbow"]},*)
(*Graphics3D[*)
(*{EdgeForm[],*)
(*shuttle/.GraphicsComplex[v_,r__]:>GraphicsComplex[Map[func[#,angle]&,points],faces,VertexColors->({color[#[[2]]+0.5]}&/@v)]}*)
(*,PlotRange->{{-10,10},{-7,7},{-7,7}}*)
(*]*)
(*]*)
(*,{angle,-Pi/3,Pi/3,Pi/90}];*)
(**)
(**)
(*(*...\:0438 \:0430\:043d\:0430\:043b\:043e\:0433\:0438\:0447\:043d\:044b\:0439 \:043c\:0430\:0441\:0441\:0438\:0432 \:0434\:043b\:044f \:0441\:0442\:043e\:043b\:043a\:043d\:043e\:0432\:0435\:043d\:0438\:044f*)*)
(*frames=Table[Graphics3D[*)
(*{GraphicsComplex[Map[collision[#,x]&,points],faces],*)
(*InfinitePlane[{x,0,0},{{0,1,0},{0,0,1}}],*)
(*Map[flashes[#,x]&,points]*)
(*}*)
(*,PlotRange->{{-5+x,20+x},{-7,7},{-7,7}},Axes->True]*)
(*,{x,-10,10,0.1}];*)
(**)
(**)
(*(*\:042d\:043a\:0441\:043f\:043e\:0440\:0442\:0438\:0440\:0443\:044e \:0434\:0430\:043d\:043d\:044b\:0435...*)*)
(*Export["C:\\Users\\\:0420\:0443\:0441\:043b\:0430\:043d\\Desktop\\Hollywood.gif",frames]*)
(*Export["C:\\Users\\\:0420\:0443\:0441\:043b\:0430\:043d\\Desktop\\Rainbow_Shuttle.gif",shots]*)
