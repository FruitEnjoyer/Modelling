(* Content-type: application/vnd.wolfram.cdf.text *)

(*** Wolfram CDF File ***)
(* http://www.wolfram.com/cdf *)

(* CreatedBy='Mathematica 11.1' *)

(*************************************************************************)
(*                                                                       *)
(*  The Mathematica License under which this file was created prohibits  *)
(*  restricting third parties in receipt of this file from republishing  *)
(*  or redistributing it by any means, including but not limited to      *)
(*  rights management or terms of use, without the express consent of    *)
(*  Wolfram Research, Inc. For additional information concerning CDF     *)
(*  licensing and redistribution see:                                    *)
(*                                                                       *)
(*        www.wolfram.com/cdf/adopting-cdf/licensing-options.html        *)
(*                                                                       *)
(*************************************************************************)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[      1064,         20]
NotebookDataLength[    218036,       4349]
NotebookOptionsPosition[    216996,       4310]
NotebookOutlinePosition[    217432,       4329]
CellTagsIndexPosition[    217389,       4326]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:0420\:0435\:0430\:043b\:0438\:0437\:0443\:0435\:043c", " ", 
     "\:0441\:043b\:0435\:0434\:0443\:044e\:0449\:0438\:0439", " ", 
     "\:0444\:0438\:043b\:044c\:0442\:0440"}], ",", " ", 
    RowBox[{
    "\:0434\:0430\:043b\:0435\:0435", " ", 
     "\:043d\:0435\:043a\:043e\:0442\:043e\:0440\:044b\:0435", " ", 
     "\:043e\:0431\:043e\:0437\:043d\:0430\:0447\:0435\:043d\:0438\:044f", 
     " ", "\:0431\:0443\:0434\:0443\:0442", " ", 
     "\:0431\:0440\:0430\:0442\:044c\:0441\:044f", " ", 
     "\:043e\:0442\:0441\:044e\:0434\:0430", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "\:0437\:0430", " ", 
        "\:0438\:0441\:043a\:043b\:044e\:0447\:0435\:043d\:0438\:0435\:043c", 
        " ", "\:0442\:0435\:0445"}], ",", " ", 
       RowBox[{
        RowBox[{
        "\:0443", " ", "\:043a\:043e\:0442\:043e\:0440\:044b\:0445", " ", 
         "\:0438\:043c\:0435\:043d\:0430"}], " ", "-", " ", 
        RowBox[{
        "\:043f\:043e\:043d\:044f\:0442\:043d\:044b\:0435", " ", 
         "\:0441\:043b\:043e\:0432\:0430"}]}]}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzsvQt0VdW59834+AbjtXQQbI+O8tUjIcmGY64QJFzkEkBQITEoAQQlIRxJ
vBxCgb4oVBDhJFgoEg9QVMRgEQHbBAyKiAEUpXCEhIrSIjYIAge1gUR74Jzs
0u5vrjnXZa655rrstXcIIf/f2INB9l5rXtea6/mv+cxndps64/7C/6ddu3az
/w/55/6CJ4bOmlUwd2xn8se44tmPFhVPe/ie4p9PK5o2q9/U9uTLn5Nj/+//
266d8v8QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQ
Brj06cY5Y3vH/ugH7dsxOnS6OfGeORtrG5paumgAAAAAAAAA0Fr4pjK/W4d2
NrT/8YDSQ5BYAAAAAAAAAODGxc1jYuyklS6xesyBwgIAAAAAAAAAJ5q2T+LE
VUzG46o3YFPD2YMv5nJzWl0K90JgAaDxwbLciZPZ57ENp1q6NC3J3mcn5xZv
PNnSxWgrfLnxMe3CQ7MDAAAA1x5NG0a3d5iiajo0p4f2e/tepX9WvvvDnDi3
ya64OX/QUziz45l7Em/upOm09j/4UWzv/Bc/vWTKZ8PoMJK0R1k/dk+itnyM
ZKUsHhOy4ss/eoNez+fvCbDTTBlZEiRlX/7hGa2V3IutZqEfSFJnLcIaRCli
rtgYWtYv5luWwj2z44yphzz0hV5Hu1p16BTbe6yYcFi1U9vw+DpTgUW4hjVS
FrpV+oOswxS+WTmovffEm/YWdnFqlLCh8mpqyW93Ve/ZX/ffkafXeoG8uqr8
98n91Xt2Vb80C/IKAAAAuCZpajixe9OixwYndur2+H7ZAfsf72I2V8OQV7w6
E4gZveEbI5NoyKtvNoz5sTSzmMyVxzntYLXWTZa3nlHTodIMuddkh+RfMB0a
vrzqOnK0pEViRq8zq5tvNoy2cdg0a+Dw5dU3ux5Pli6za//jEaZmClNe2ZdY
I8ryyjzt6pr4n0t7ce0eNXnVxuetGJBXLcGH/w55BQAAALRS9hbepFmlvUpP
hyOvdGXWPn0BnaG5dPJFwwjnjd/I5RU/lWHBpEks1vrFNZncqWpGLivSYiZt
b/Ijr+xL+AujfkaBukx4Q9FdTQ0fzDRmEUdvkNXFuQDa8b+wk7usVmFqXiNx
ToTbEVV51XRoZlwYiX+zbmRHabkjAPJKA/KqJYC8AgAAAFoLThZ7x0nbbQ+2
WqzbJ6kmbRduXuzQzK6SM+zsbVs7XIQz79vfMuZFVcxtK9TURPvMNRdtyqz7
R3Yp2KEHoefSi8mYs+3kJUXj1C7P1CUXl6CHopqUSkzmcrq+jS8fn+Dp0l7W
PJrWjZSkb9f+8u95HWnU6gRfCiYbnWskSfzYL3poX3Uc9Cwfy1+aSMTyyjwX
5Za4eaLL0lg+cZZXX9T0GFHRQfL5YCP9feM85f/lX33+wNQ3f0i+v3tb7KMH
yr+6wiVx5ezBP2RP3f5Po9iJW//pwff+9e2LWtP+Ze5kc8pKCh//9lsthV0f
kC9zdnHp/fWLnGxy5I65X7DcZZ/JNZ9oZdvouSWc5ZVdXj1e+IveUD1eOFP9
wp7YrEry/Q9zdmavP/Mtn8T/1q999r3A/dtuoCfekFWV9uQfqvVbg9aU/ygp
bDmvedzShqL10vnkhR3KkfO+sO8m2nRq2f7isR3M7XZp48K3fsid3vRVXfHM
Haw3b8h6u9+zxz/7X/7sL3LsiiEH8goAAABoLThOiIhmqaO8ckveg73tWV6F
Ln178E3Fx/FHP5lUybm4GVNvI9c1Scusa46UZ/4sOc0soy6uHKGsVJrz0u4T
4nZgXuWVOUQIN+nWfsxmpwpySRhNHZa80mWbJU4JN7nD1TcMeWV/HTSHvLq4
YbRpLsolcckVfbXk1bSD6946rn3+MDpXkFdVN42p+OFDH8x94/jzz1d3uZtI
pJ0LvlATqNv8HjHOb5hYXfwb5fSSsj3dFcu8Km8/E1BMXr1bpCZ+bO6TO344
gtMRory68sHyt6jFrsirkzVaqZa9S7786RN/UP98/5uLzSKvto8uP240Bc2U
l1c3jqm64e6q3s9+su6tTx54aCv59ab5dep1+LdT/zqWyK6qnk/XPE/OfaNm
wrQqorNuKDpax9XUqMJvDvRWjt+Ws+t/jIbi5dXFPw67u0KVV3/9psLUO3p7
Ht9zLiJ5dXHXBzeOqBrx0vGKz5ViNB2vSSaZjtoxvOwTvbNumLh/mzG4KPLK
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
EiCvAAAAAADCBvIqHFqRvJpa8ttd1Xv21/13uGdDXqlAXoUrr/775P7qPbuq
X5oFeQUAAACANgvk1fUHlVfs42MOC/JKpc3Lq7D5cuNj2oUHeQUAAACANgrk
FQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEmeD5j9fO
zB6Y3D0uthv59Ei+I7uobO/5YEuXC/invqIgLX706lMtXQ4g5dTqrPjUqRX1
LV0OAAAAAAAQZerfKe4fT1XV7dn5hUVFhXnZA1J6EJ0Vnz521VFIrFZJY1Vh
Srchi9B91yzBo4sGx6VM297Y0gUBAAAAAABR5NjS4URbxfcv3m6arAqe3ztv
aEJcbPecFzH/0eoIVk9PjUt8bCfE1bVMcOfjid3SplejlwAAAAAArhcaX5tA
NFS3ISXHJD/WV0xNIcordz08mFoXp8ruiu3Wd/7hli4HcOHw/Iy42JFleIEB
AAAAAHCdcOiFydn9b3tgvY2H0qkVIznxdWzJoG5xsQWV6o+NB58ZlRTfLW5Q
qabNgnVvlU4ZTh0LYxOS+mbP3nj8snGi9MNSq5hK/l9QEazb8ig7PT4xffgj
r7OzdYLn966YMqJnYoCeG7it14h8foGYfS5GCQmXj2+dP4F5PyqrzO6cssK8
yKyiwKaog5foqdTvK8u/MzVgOaaggk9EEK3HSgaTL6dWyP9k7b16lFntkhaZ
SToowbFGIlajneXlVCla4KmkBzY/MoIuwVOa95GNQg8orbdxVnZf1gV8FxtZ
yXvBXGByoSzRGjBwW7/smUYqQrM0Hlg0Wqm+0fikBLOz7tAav3vqAKEMpAp6
CbunWq4ichGRvktXmzQhqaf5ApB1nPClp46jBX1d77v4xP5Zs8TrOeRBCFuv
xkDKwHGl+0xvPJw7xf62tb3UjYpcPr5twTittQMp5jvO82XjcufKcbhI1KI5
38iE+pq1ehfwhfdQcWU56iPadSLtPpdBQGh2WV9ILjY678yPJKbr2WY4kjee
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
AVviJMuCnT6y7Kgi+S2Jm5HWgi7hp43PHJ8s81+KPOmemjGHNSe39orGgeFi
deqVjmTtldibTBzxsRA1uXRUSdMmBL0kF2kTeXUOFJeYcUu62AFiAAdhgtul
5Y2M7OWVl97x7hzodu+rQX6MGAWe1l4JUldxau2eOuTp/bIzwjXdfbezpxMt
mIS/Bn1LoF2utPuis/uV17VX4oI4DVfnQPZ/8YHFWiaa8oq9hhJuc+bjF7a8
og9Z7WUIbXnsfgUAAM0Ni/bGgqhrX9Egder7WA+RytTgUbx9qMYESy2u5k0w
20e2U+RAunhdeYIz/zctLV/yKjUtpVsgt1xPRvSZ2TxZmavqM/egXhgv8iox
NS1e9Tbk8opG5EAjOr3W5sIilJTUQGzGPCNnO3nFpirSs0Zn6KrNVHf6Bt4c
r0yLVaj1sodGpjODpiiUWnhhfW3RVY4cyNKkNvzdo7MCWmQ8aRZsd6e7Ro0O
2AfQkxZYba6XxuiTd+r+R3wsTV25q3GVzU5x9MJLe7jKbPFHGjlwKnf5bKG5
CxulsfAUWaTXLKJYin0ThRE50JinU+/0pKkVjfoBvWdzIULVA1zMfr7lQ5rp
bp4mMzsbu/eOZ3nlcu/Xb3lImaviDnCTV2oMTz5knPpyiYvIbcKfvPLRzp5O
tCKJHGieQOSDigSPLvsZexHjC3d5xeZwfUcOZP9P5+PYXj68mEZQj768MoWx
1W7hsOUVuw21oDTsTZo6TB1dOiuCxgYAAOCE+n7VdsMjm312+he/IxoAcYE+
yt5V6o42CekPV5jex0tNa7t9r7JXq/mrkcGErVX8yStxdxLTE61+S57iBGKW
hF7kFW/ZGnlFLK+o5cacIdU25zpFX4RiMrrs5ZW+15X+RlR4vjcemC/Z94rb
ssrTvlenXpto3fcqtvtIfUOh5t33irsmeXml73WlvXV2Wg8im4ATsbg4jld3
fx62TK1E48H5kp2VAr2maa8gRDucvuUwX3s2F5J73Q3pbdphit/XSa9xMr2K
bEPQi9g1kVd5lZaSqraJeqdzo4S6S5Tml8sunpT+pvUmji1/aI2+6Z7gq2zZ
xNmldzzLK8d7X31dk2IeUdxWVwkbHrH+5csmQG9kU6SO7D7Sb8zOgR7aWe4c
6HyiBHrN8NOm5rAqWly7jHkHzm9/4gm7arpz+fS2xxQ347jEya+etgmNZ4oG
b8U9tAVzDtRdPVnvpPXr7+hDHn4fqc6B2kDKbpb4/v35Y7zJK7rYlotaw1qg
z9yD56uefMLYj5BezNj3CgAAokp9zdpHtN3hAykj8sv4veFDdJf62Vl3sPhI
gdt6WQ9QVuK+NX+CupF9QlLf7NkbLdvY2zmoB8/vXTFlRE+2jLd76gD+3OBR
GkNbW9pgpOVPXg1ZZDIwOYmhvmcWXxF7kleGtyGXVxQiB9Yc36iubrZ2CpNX
SrAy+9KaQhwwG8bwAbO+PiX9UJavXQbxif2zZr3O9aEneRVSrpXXZ2YPZPHE
FAkwpWwPV+4oyauQ6zVpklfqkiXdr8nOxGXhyu02GBIKbPrEJ6aTmu7jOyN4
fk/ZlOG92GagytuDmfwtYblImO3Kz5zaX0gudVfbk1w+j6jCKvnOKSsstyyt
MRWeDgHZLSfIm8hz5MDN5/eqkQEko0T9PtJibAyhZS7Zdvwy8+XTJsscW57F
/SDfjJ6/z2ykW1vSuXe8yyv7e1/6usaDvArRwXTBOL1/xbIJqLV2//ChLTy1
syy0hduJMug1YxzAFlvxYSpZpJT0+0r3+dVWklAkMt1B524cotZ42lZ4H3la
cePbkq2kDegEnP1rGR99FKzbMjurH3d9rv34fJAtYNTK70VescVWfOQQtnAy
fWwJ39iQVwAAAK57wtgvEkQRagdGKYhZC+K20J5Dj/vhFd9N5CMmHrhOoNNV
nmdImw+qLCT7dwMAAADgugfyqgUInl87Lt4a36MV4lVeBc+/lOsSgl48wX8T
QV61YYLV01PjEgsqW/bWUqZTBSdzAAAAALQRIK+uKtv/rdft6dRPzFg81Zpx
l1dV03v2vp264waGLvVS48ibCPKqTUNX+HqbUW0mlP0BudizAAAAAGhTQF5d
VQ4/M0ARGrdlzn7H97r6awl3eXV4Uf8EGqNg1k5vNY68iSCv2jhKJFJT9Ner
ihIuUr67HAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA0HL8w56WLhoAAAAAAAAAtBrS0tLaUbp27RoTE0P+
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
bUmXcsBP2MPo18s0KUeN8BfHksPal6QOfm3iXWviaKbd8z/VymN9lHz/wiCm
OHQxcqVmjrJ2rGOHZQPvUgozMkBL0m5JwXZV6/mSV1f2FS4THjdemyViedV0
6O2eyuN1cVzv9UrzDn6ePW27TNKexBdrH4ihJQms1brgtYm3L3OXV+0XdWpX
MrmSV8GX1mYuEqXZN4fG8umrXbOwU6/dShiXj/Zomb6S1pF8v2yQVga2ds+9
Z60N9c2HI5hFEZ68cr/M5CiWbXLmpKLCIvUzaWiyTF6Zjiksyu7Dy6tjy4ZS
q/727HyHdEzUVxak6qfkZ1HpFJ9eWKFb8yaTu3HDA4HYhP5jiorWHOJPjwv0
yZ5cVDT57vR4Up7Uqcrph17QyvBgZhI5pm+WVqQFVedUa/+OvIJhgdjuGVl5
RYXjhlLFkZb9om4+BY+WDlcSZAcUFeVmJil/dkubXh3ki5c49EGuTYQqB48u
HRlQjXyjjmohVZj0MEqofCYNS3SSV8EDc/uadZy3GrkVRuzlcSOSu5NvAkOX
aomobR64LXO8ckBe9u3dqVIbvfqUqTqRyqvg0WUjaNa39aOdm51BZXtagV5W
Jq8ysrnGX/jmOQ8nWqH30c3dX9Fu5LWqiunxjmZ+a+Mqu4W1O+vG5Hdq1DHI
PDjv3xZPBqik9ROn13zlNj64D6S0eENHv9pFHYLU3Dvd8sYOfc8W5zHKhm83
kDT1oXV93x8rQ1+X0Ye+VX//ftOYX9KnyZLeSq3XsohPnXq8XaNroKbTT/VY
ZIw5g1cohW///FOHroRO18zWajpIeW9ZkjZcG5x/Weep4u4Duy95JRld3zE9
YuhndPcSyKuQo1ggdO3aNS8vT7rkipjc71OsPwnx9Iim2EtpaGiwHtyshDV1
5WP2irQP26+K6Tg7eVVeXs7mMp577jmPKVshWZCMpM5jpC9YC3spf7iQrhSi
IDp0fXQR5BVp6hkzZugrla5leRXWosVWLq+uNNa+f7cyki+bvveK7Jgld6/8
Wn+kXPr9dmU01q1Wiel75c3x3OBMn7amp5ImWHr+4r/Y39QIJ4rs5Rf0OS/1
ibls5n6+JMajhOrBRZ342auL++8mf8a8uol77/rtyrVKsI4xasx8P/KKVrBT
+0Xcif6axYe8YnqHe+aGtOdj+w2/o399VfprUrCuBX8yvfeUzOzwUHk18tWx
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
SVlbmJdXzPVOmt3evXt9ZCcVF3V1dXZN7dwm+sIrUndSEaI3SVEjvGYilFcM
IqJJLZYvX65HHWTTuKR4pLSk2OQAIlr5iBys0V6hkD/Zoq0IixE9bNwnVBdB
421h05ljpfdom8t3WJIobC4vieGw+CexawrXGduU7H5G29ee/JS4/qmN5y4x
D7cu21hgavUB9Ptz63JV85scVrqjgctGlVe6t16IP9EIbfGGFlhPeWwVLv/z
2SZ6ohY+lz017D7sacLkFb8GLSR7m+epWSLfVvj4wUJVrhL74VcD89///Zkr
tDB0skkNoay+cTUIQ16pCwEMF0RLaAtSTRaCT7E07nl7y6dNzOXSHNbYMXKg
Q8+q148SB1IsoSCv7D5qRdwvMxPMQHX8DCrdrkYq6J4xhZsRoHDyqn7LQ0mi
/R/yEDkweH5vyfiBdO9aZvbP3sxnItrhjVXT0ojlnFuuR1qofemRET0TaQCK
7qnDp5TtOS8Y0U7W/mYl9wxNcczeeJyPSBCs2zI7qx/bSlix1Weu/fh8kC1x
0uLDu8srVsWy/DvT6Sa/cYGUgVmzXtfyoQ2oqJXR8/eZN72VyavEyVv4g6Tx
MRxr5FwYIyP+E5+YTlrVKF39vhVTRqj9pTT4kq3HLzOfyT6qY2J05BUrK8lL
79wBQnXso1W4nGjFGtqifckt5CbdxWuEK2d37Lov8VluIPr9McNb0HLvs4cI
N/tvNz6EXAdSdTg6eexFNWzRjZ1W3vfMsbP8Y8DrGCXy7YH3H9QqJUk21HTs
xTcGxrIghItu+pH1AHLI15WPv5zIhp32JQGh8BS7VWBOFfc0sHuXV/aj6zcH
7+0ovksMQV5FBvP3I7YrMfliY2MFM5uXV0yIEUOa6AtiSVr3VHJAyLTF5ZU/
+KVAuh8d+TJamxmRBomJiWF9QVpY0LBhtbBUXgmzV8z1rqamJlrZOe8JFS6s
tclVx/wwmeKLMApHVOSVlQsXLjhMzLGrnbTwmDFjpJOeQMctjlPzQx9DbdYX
ovlo5p6ltoSH4F0SqIFqr30U4/86NSdswpi3Yq6/GgEND1vXAXDtwBZe5efn
h6j5ytQTEQu6Qxovr/SFVwTddG+NzoG+4ZcCkZZh0xNRnIbQJRsxwnVfO3+L
dLzIK33hFd/1/jq0OeQVaW2mStavXx8tAUsa1ssKOB8MoTHkefQdsljjPPfc
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
qyutvHuvWt5+X53NaF0eAcgrAAAAAASOEI+7+31jn9/7+beSp0mKV75kiDa5
T4hYruJMXnHhG3hnGHc4+IHZueB+2qV8NHFfA7P3iHmanX/pwBJtO2BNHYmB
2X+eKodx/+zlyWq0dS7QhhCYnRWEhnyP6XVv/wefWrXv+Lc3jaWgFeECEfKa
L0B5pbaRI3mlZdzp5NVdy74UhilVDfeuv0ISzyRyJvX9MkHOSMtz7NZetd4q
W6JkKsurL6X4dQv+61vuEv/WXplURyUI8kqXMhOS0mKlv+06RAoTsZnfu1pe
tWS99qq1tf5EhJIpk1d/lIKxv/XU6VvaJf6tvTKpjvAVW3slLXZL3TvhbfbD
YGuv9EvJ+LVXb/9ub4+M/xSaEPIKAAAAAO2B4KGyoHvfJbVmTha7yYHadLtu
IRNLL7WIGzt1a7u1V6wkpjKkpXaJ/bbCQiyMttxWmJN/pilrrilDG5gqR0fL
ubqp3SRWzdzDZyWveLdZp5NX2lIpwo/flyxQ490xJVVdovXBrS/+/RCNrK5E
SDAxv2+W/KtixtP075321l18Gfz3XtFg5m3ovRKi6t2sPXZ/asXPln15XdEg
967llu9dv/AEjaxOdah5FVpqj6lBQmj6b90/TU5Qu8QvecXi29t5r9hXP17M
nFxB13nRIltFDkx993eXZeegUh2b8ghAXgEAAAAgOLRcKs8KNY/uJ1nTPx/y
/EcWa/C9hLYw0209eig5dZ+4QzHw2kBeCTKEmwt49b2nY0zr2v3nk0vFgBFa
7n3GzUg21CVk4o6rpgUYNFWQkSx1g0C9+l6uhdTrft+MyqsmpVB3ANaUo7rF
VgDyStimy7u8EuZVdjp5ddf4yh4TDqS/dKb0jZPp4vomtvjoruk10jZJb5yc
NlfaISsxe7+Wpi60xVuf5v/r28SGl31Vyjqg+9dfaREL4Ovaq40v/WXQ1DZe
e5VaSZqi99xjhW/VF/5eXN/0w5eTJEdeVYK0O1h9YcmRyAkVP53zLpemLrSF
VOCEyZKkYr4qeePg8Yf/eF0sgM9rrz7Nf+adu72tvVJTkIXYZtZopvtevZm4
7erVL85vXCXNhBzxIrdFGrcPV8UX/2varpBXAAAAAAgiUgz1x/q7fqFGUe/R
6xdRI55a/2d9jDoeL4HZpYl0KS6WYvef/FPUQ0t2fXZTCwuhLXNqE3llKkP4
uspV7dHL1T/LrJ5i7lffe16OMS9FQcx6+TNRcooFaKkvzep/70+60+SjHnr+
gGkrtlz68/ostRxSE5mUxKwNjMrRb3mli/HuNbSF4N/rfPKq70uXql864pLi
4FXe/fihf3n7OteYN5WvKnpM2McC1lFXjrykyBjaQgp/sbL+8//XqqbfI/2D
XT/oC+B75MCKn046mL790retFgRj7VXZ3754fDYNjUgrW831W4v6FWslKYYh
9e7Jkc+NoS3e/Ocnjiw9/n2Llr6DWX8OIgf2GL/X9eQxOXiIRU25FOjl2s5W
N6u3fxD/6N67aDq/nP3B72gJmY62+Vg5sCCvAAAAAADaEp+0g9MdljsGtXSd
sGwaXuSVF8wDs3dN7OWVN0xDW9w5UHllVX1JoEFeAQAAAAB0BJBX7QzklQLk
VQBAXgEAAAAAdEogr9oZJq+Wbqo+8l71Zw2+Xg15pQB55aO8+r9ffUSG3JFN
SyCvAAAAAADajttIXnUNmLxiH999WJBXCne4vPIdfuBBXgEAAAAAtBGQVwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAgNbW5mtffFhV8tzUMYmPbbrY0YUBAAAAAAAAgC6K5+CTSXEx
kWGu0DDXiDVnOro4AAAAAAAAANC1ObNmeGhY4tLjHVsKz7n3d+/e/ZevO7YU
IAigKwEAAAALmuv3rslLHya/3A7tGzM0Pa9ob31zR5cLABA8zhSluEJj5le3
a6aehprieelDYvvSe4v6SSmEC62rga4EAAAAHNF4dPk4+riMiE4YOzU3Ly83
M31glFs6Ejl84cHGji4fACAoXNk0kfzMZ1d42i/LxorcxAjZDg+PSkrq/wD9
pGaV1rVjKUAQQFcCAAAAjvDUFY4mSsqdOHOr6Ktqrt+VO0h6mMbPqWrqqNIB
AIJG0/YMYhtnbG+/37Pn4JPRYa64SYXv/g2e8K4NuhIAAABwhOfY0oGu0LDY
nEpTH1VjxexYYo/F5Vfj7SQAXZymndPDQ8MmbL7Sbjl6KmaHh8bkVOD9TJcH
XQkAAAA4wlOZI/mnHiy2jNLcWJYh+bam7SRP1TOFI8LEKffqZ3ZFq7xq3pVT
KV/adPz5CdHEnBteJM/Lr8ixuFyIY+Zp+HjrvLFJ/SLYFJTBaYte591qNBH9
VH+Tg831uxYpUxwjogemL94lpDLbxRXM9KBJmp7q+XFSqXIqHGdkhOZi+uGS
9dIIdn1B2/9iyYMmFWxt2vG4m3Y3u3x2Rasxzdli5V5fmD7Yshjem9FhRs31
ewumDI1z0yq4Y1OzSmoaOEVvMnLkYeblQgOOy7NrcZqSrCsyboi3bjWOFidH
pJUs2akJbPCEuvsliuU3GSpyIb30izmeihy3XAD2U9U+Y9ae9V4jP6pQt3qY
KzRzj6fxaEn2GLZgJzJuTHbJEb6T9IUx/iJYB/H5kmzXTBkk3V6kTAelLyw/
J3S7RZriWCWJlGSNtRo8DoaK7o5Hubg5LVy8p5HKq7lY/N6NWN8BrJtLVxKV
O74rHbRAG3alEZu7Fm2fiOiH1irzLVnB1DJ46jZNTXbL1Tcbohc3T4gwvfMY
P8KFXu5Fcrntbjt0Xaf01bgSnT2hPq34HL094yzvfl4fjgAA0NFU50eRu9ZE
u9fZTWVTpJtYTqWn9cq+FXnSyizySZd8XlGjnpD/m/dSbav+CVW7nJwTPzYz
r6BKTp7e5GNGzlASkT7pA4Tnl6du7Ti3rFOycvOy0gbQ53jc7ArFu+bIVGis
zKE6yD0gfRbJZcoo6VYckTRHS8WrLjBmJHv6hIep14yM0Fy4ppM+M0bFcMl6
bwTlgTUwjUskd8boKLX9r2yeQP5OLqgV+lKdG+ZIZci+y9C+D0jFyMsYKZlA
4Um5WjGCI68aK+YmhTNrbQqpyNQU+ogPH71GXdFhMnK21Dq50ICz8uTE0wf3
qAwpL6X9I9Js9oryQ1556taMitCaVx48oWGxqq/YZKi8VOukX8ypnh8d5kpa
dkzO/mTB0Pixi7b+5ew1U9vEyQ/NaxWk84cuXCW1p7vfyKlqaV2R41T7Ub5v
JKdb/yL0NrncApHJaZnSQtEHpIA87lFFXLfTNAekcwOG3rK4seqpKxoTTn9l
KVO0XnaPW1fHG7q+yqvG7RlsdZJ6TzuzTmgik9oZsb0DXKkqUNJJSxZ/F1tq
TZO747vSL3kVnK40Yn/Xkh6ys1JJIw9cfoIrmFIGqvj6Dp3CnqrGIcpeh5rd
eaJHz9A65YmR0cKF3u9FDm47VF65w8mFOn11omCAXtA5eMaZ3/2cPBwBAKCD
ubI5zeadp0zd6iGhho1yTO1q/glFJ+pHPXWQt3PNnnGVOcLzi6YQN71Me3/Z
fGK19OgMn7j5omUiuoPsERMzoUR7RnvObZ9GdFD0bHluix/yipYtPMLNPUwd
ZGTELGv23k9O1kEjmNt+goXAHFXKM5pCu5t3RNqajsy6iE4r5itXNp08YaNy
Kpus6+KrvGqqmB0lWRfLjqrPR0/DHipwBNPO0OlOLjTgoOLUGBA1mqysR639
0jxVf+QV66D4HN4sYG0ekVslX2DWvE76xZRjyxLJOfk0aCBpqHnTlh+1s0gc
/NC8V0F5bR6fU66+CPc0lFM7TdX+Zo4D4Rehs8mbdk6LEA0q+S2H/tcqGL1i
Y3qOLZNMvuSn39HK3nh06Zhwn94M6EveVJET44pw8y6P6nzJ/J60VWhqsXYG
HN0BaJ3M+sjIHd+VfsirIHWlAUd3Lf7pKcirE8uTw8If36n8zPVDlCZOBY7x
ziM8wXUXOrgXObjt0KZIyclJ0c2HkV60RgwckGT44diPcBsbw8FPAwAAOhD2
aDBMIdOdJE5OYHiTV41lU8JF277Vgbw6trS/2dQC6ZmiXuj9QckcN8YJCrSy
GWVNluW3k1cXN010u+LyN63mHqZOMjLiTV45aQQH8kpeaMPtcHSxeBx5Pj79
Dn1HKkWQ008JE9Jk0ttimseUMqcq1auN2lSWIb2Bf/KgqIeY3aXEuDPrdEcX
GvBuM5/d9GhCVN8c3fWmNeW/91leHXimf5xbv72vWDyzTB31ixl0XNGQ7M0n
N81+do/tHErT8vtRBdkmnyyapK2Nr0wO0+LD+2iTM3+6rgVYs2htVZUbros/
LzYmNZUNg4dNlpYdfD7LK091fmyoe8LmEv6eVjWXGK79nz0mpmJrkzu7A9A6
BU1e3d5d6bO8ClZXGnB616KSZPqOJuH56zn4dJRwrTga6dx1ojKK9ZX9cu1o
3RwV3dj23vtObjtMXhVWSAXmFngefzYpLDxnzSouNUcj3Ozu5/ynAQAAHcjZ
tWNc6gttK3z3XnkaynPiTN4meZNX7NFjcpNkN1X2CPP+oGRztsUJKtqERlZZ
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
qcjNqzh8Q6TgXMUYPbEhlmOlJvLf7hQxk2duciBRlmNbW2Qyp6D+jG2Bu6fq
uBqtrm9hB9DnZ+uKXe40VZk5maSJ/XfHKl4X609S/fDJ/M4l6NNQNW15ZYx2
r+d+9TMNrWaaTevpie9yF1WSA7srSVzX8azWcg0ltyXLw8y12knzc5UuO0eR
V8nBXZUx8j0anYwJg9jtp7rBtkZrPUn++J6hSbdJbbNb1Z1btm84utDz+kvJ
vkaSov7yytuSPbgqYvLDnQWsVf94T8evblLOT22OWa84Wp0WJTVUymTR+p/Z
xd9h+c8bTt91VYHV1Pe0NHD5lpe/9axolWbRVrUk2B1BJrKMXNYg7udIRQtv
/xnJK4+dI5tlFuWVsPPyN69ToyLBJTVU7/lmB8I7ZEVW3DpapTrSgbZ9MHTU
7g3qzd61ZN1Ldufw7k1R8KD+M5LZsySvvC0n+sPCNAQrhdNT0b2cX7lHqfqZ
7eqtNO3qsO6ppZtOibqOYk+lLK3P8o6uNDFIWYvwsAAAADAXjPdudj1KbD+T
PRcaL9iPF3pwx7ZY3hY9F8p29jlv/6duHzd9b+EmWS8bY+sPi7eAto4TAodG
uBLta5R3s6bnEKuqftpfXk0OJEpyCmLe0St3rix/w14szB/EBS/+WtJXw53M
vVlu/d/9zL3Ztdzt+Vj5L0oMUgKZPHO5U+QSFynj+mF2obz1p/5COdpnPhxf
OCePLCgPYvKs4u2XxEtMy23jjseDs1vYfyvfuOby2IKdwCjyavLXP425FHTK
9oIK9gz5JDs50G5K2g1HnFfBxsQlXim2KKNkY+uP37bfLtt2fvWKeUC4D8wb
g6ulsYv0c4PY4kjj4NFopl01XLO4fG/T12kym+vuT3UX1eZE9Zd48ellhZ+8
0rVkD3JFjPc+6/IwKcH4i/K9eOs4v9GEONLkfLxns5Omp6kz89x40/Ra6059
nZKK5qpKS26LGypK0cLbfybyytfOaZtlhuWV8JarjzCBRQM0UjerO9/sQGoT
iVpFVphVVrC8qlLtFoJtaxVRd7NH6D8jmD078krXcqI/LKhTKq7vcQxhjPW9
WCp13TPf1VuWr3r1ilO5yWtvmoJL2CqCPalfKqh7W+oduWorecXsHSM8LAAA
AMwF9FBo7JMkhzGYMHt46sBtSIVtPfsgZY34eCdp8IeU7ZnQE5Mm3TnQm8b6
Mw9S4pg1JwfNxwGlzLl++OmcgvYTx2v95JUx3Flqar3ehFdeKbmix1Nx57CU
Q6ewxpVXiqVTXM/cG29WevPPH2cF7TTBMAN59fWZH5cXLVUnKLo8uk93sQyr
sXldT0wuCWM73aNwzOuOlT7T8Zt/S319ej0rReMF17+zIK/+4fWn4zE1heBH
+WRfo6chpYTPwM1IYrD66E35AFYv8eLy5079s2ockTPpy8kLjZqWxi7youm7
JgbNrzUOHg0clOyjlvEPBytLl6pXUc5K1xs3hvfFTWe+J+Fx+4NbsgenIrjq
kUdgzZtFM3OMbjT7ot6cG6N8AjDdiX/5ny9ULitsV1ulq/apaGpV0g21he7d
CEWL0P7Tl1c6O2doFvXL7MsrMbi85tXOLR5Frzmfy6sTA6Zttzh9pNk75Se6
35ZyEsW21ncB8iqo/4zQvLMhr/Q3ReSHxYOz9bqqp8w3WX3/jHf1/HRPp2QM
tOeLyRIR7EllUWIJGldeKy2qfPa//3OUhwUAIIC/BTLLmXnEmeWLgpnD35kR
L64J/gzi4xSTfU0atyRlyy56Zvk8Ukka7KLRDnt9Fn8w2ZqLS56iV6+MnvSR
V/Refe3xUWPQK688uXpwZqtUFlkk2g87x2mRn7kkUpr7FZ+d6wXLXJmuvWJM
Pfzuuzuff/xxb9eeJmvCvxiLsUZzDv/jnx+K1QLyE/MvpzZ4a0eGfMiynefv
TPwgsj99eWVh/PDX777+8ncfv3figD3FzvdRztuM5r+SGYf2uEaINDkL84Hl
Vue6CJddVGR1cqA1/6d02zm1cBPf/fnLoY/f6369xV4LlqG8otfXtW+PGi4z
RmnJXhtYKdD4izRf0d0gZUhfWA1PnRxI875iKw4OuzS4aJX/raPRWtbn+6bd
gibcUvWlUbSA9p+uvNLaOQ2zZEdeSR9zyVJb92fWEJBXXlmONA0V7RpyvwXx
YMmru3dlWcEc7CJT6o7qshdkW6uI/vIqsP+M0LynL6/8Wk7khwXPT15Vg5gs
55oSab1Omemu3nq7uOEldx72vLShyHkAhdtzaHfMeVxqCH1YAAB8aWlpWbJk
SVlZ2dq1a2tra9nvTzzxBPuF/fnUU0+xPz/55JPZycnVq1d7enqefPJJ9svs
XBHMAhGcGfVLeo5o5JX8lLSfhuohnmeQeQyf1kIyhzwH9hDUPK14yvx7Wryg
kVceIaMUkLwFmmbDn03yXEFvBACPSyCnltnaq2snd9LCFutTGK9bvdxlz+SV
A6u9S5VFjYQ/PY3Rsy9UeuJahDvw2o+09mqsf6+1Iok+sWUr1q8ImudPnqfm
v44Z9U6dfKinUuyPdZZ3lbp8dVleqZ9YxY/P2vOBzBX9tXIwkILi5etqijzy
KignctXwK1YdvmEoLTBKSw6qnWUv/P19z+p4jY5wNTx9zpeuOmjPXDIDVlTH
pP/GSjetkgd6RGgL9TLqLR9WtPD2n5680tt5OmbxVqj245ZXkiNtKVMrWoU2
J8ato6vNRIpbLgUOXdkZNk/nA4UkK/i8VnNESTFLhL7F18JR+s8IzXva8sq3
5UR+WPh3ZXlBVZ/drj4gkIhTqHB76mtKJuRhAQDQ87e//Y1pqDt37tCfTNcw
PXX06FFxAJNdsyN29u/fv23bNvaTZQDyaiHBO/DVb4/K32lHr2iyRHqjV95R
Cf46zn6F6EgwPuBivtMzBhIxmu2gl1c8sJK9bEcjr5RVBvZYj/22054zZk4d
oRABNHlMSsEa46DXjOoUO+NS8zSeuSlrJXJ+zcsn3vv8znffWaNLGonxw596
f7LUWaUur1YOHb2inP71cmdNjh0vIlpoC2m1u/O+V6wC+HQXX8208eD/+N2X
X3/3Hb0tDdZ6WRu9kkZe+KdBchqjj165AoX9y+/fMKuGJt5MDu0xV8TENx/o
Hfonp3CayYFBOXGsMX5maywnbjVTvbwKaMn62ll9eOTOuZcr813L3zIcpjF+
+NP/ahRTTO+e4uv6V/ys+7zZKv/6gzfbVDTvIjtefUXW3LHwokVp/+nIKz87
Zzao51ehy+tdYxBK6ABN3SX7W+woOhp5ZYwe50MbJeyYoub+YIEl5JUjK/jk
bT7BzGWWyH1LkLwK7D8jNO9pyquAmyLyw4Ln5+k3r/teTRR2Brt6KpGaplrs
UHuGjV4RAQ8LAICewcFBWUyx3xV1s3bt2tmcH0j6DvJqIUEPBWlWv1h75X5C
0fMi3bVXypoaa96aPQFeGuHi5zb1fWtKHvJ4dfLqvBlYyXnlq5FXamBAWjsg
z06nbzb3jpoi0b2WRB4H0a7oobVamU/Ip+epEvlKMxporX931mVo1l4piyzM
F7mF8dpjX9JfVhQRZ537tCcHki/6qnvtjdVUpr32Ss3YeM/m2LKK1v/9rzO3
9sqlv0hdKvmkuaMZTA48Z8bEKHnZdpx18iqwJXuQ1l7xhe1SHO/MFxkJWUpZ
UpNQdIElNNyrQNyLGcOLFqn9R5dXAXae47VXRv/L1pceeWXFDKl9e3SCwgY2
9gUJLEdeUeYbL4ybDZsqQs5J1L4lFSivAvvPCM17WvIq8KaI/LCg35X1Stx6
rEvZ8e43TmFnsKunjtEdRilFnVJhvPrnn6ei2ZPWXqlNdLx3c0Fxecv/+Vf+
V/DDAgCgpaWl5ZtvvhF/0uRA+QD2zWzmB/JqAaJGDrQCpuXIb1aNiYvNcjiF
dCIHOuGYrMhdTvgmeQIhfze7ub7e9hx08ipeVuryRjTyyhXazg5S5348Uci4
Z7dsjanqzzXNzJ7Wns1wUmS3pw9JQf0su7kmB/a/bL5+FNGbU8oT07h+pMpd
ZXY4KWtVjvV6vKBJctyyI69ynj/vJGmbN+BRHiFyIMUidoWtI4fBivA2U5ED
U8a1NyrsN8w0oWi7q3CUQgbyytzRQA4Hp5FXwS3Zg5wCVa4TUz3TEHnJ8y/k
0Cp7SsEVatJKwSOvXIHprKZb3D4gRw4MKlqk9h9ZXkWx89xEDvQfvTKGO3mP
dJxb0Qq86QSl9yLJK5IVz22tFx2XV16F9S2+Fo7Sf0Yw+3TkVfBNEf1hQVtH
ydH2xOsmd9XPZFdvVXRpot/Zo8qK7yrWTkawp9VC5G3R3FF8wx4WYJpEj3sw
t1ERovAfOkSG6fe5zmNUotSL+FN7jBxEgn3DpI2ipwKiTDBb3blz5/bt27LR
2PH379/PuESQVwsR144/0r5X5s/Y6h1ir43Y5h7nFazPvlcNZ907DfEnpmsX
FXnzEdf6LHv7EvuNs3Yqu7QRT0orr4riZfnWFiHWFkuxzafVTWX4enzNG05l
Fc/dcw3SZkB+m6HIa6hfWl/i+w3fXMbapsTar8oOsFAjr/HR7T2qPjGVTZqo
pLGK3XwzFCsonIiir7OVh3B5ZU0OtGcb0jYuBTUrqnWumoPPvlc1nZdFM3Bv
umS1pcLN1v4w09j3akWnvbbIE9qi2dqm04otYE0OtDfKoTzk19RUeRpYBG9c
dZg1bn9wSw6pHVoFL+rXb4On7WdEu/fMghPrg07xqZOn5A16rDoqW1EjBa6X
XUFngzyWQuUu91Z3wUWL0P6181RpvtPy+o63fufMUgu0c2SzZEdeOWuv7Hgv
Bau6rqtrr6xmtva4yIIV/F+IZQ+yvBJ7XYk+0js5MNi2OkO5Ch7Yf0Yxu7oS
zZl9x+6+Y0MPUjqi3BTRHxbmvtsveve9crqU1Gx09anJG12afa/sXjqqPe3B
KatarWZsV0qUhwXInC+++GIJZ926dcz3pp9lZWX0JXOt6TD2i3wY48knn2Q/
55VaEWUJgOW5tbX1gw8+mFc598KyR4NNOTk5tTbM+Mzs7Muuri52DPvJfmff
iEphsOOppEoBvQuv/Hj48CEzEV2IYGkyizG1VV5eHiUFPyCvFijmun7aaZQ5
qHv7P6N4v5dEKAPmxh/sH3OLFGNipKdtUzlFAyiMr2w4dPHelPNv641l/8RI
dxMJq6Ka+oMfyYco4S+U+Tw6eWUGVpLO10YOvH3vohWjwLPBvYCezupEGm+Q
BCojRd/iAcF6nQESO4dRP7Z6utbbRqZmT/+SjW0nfntvimaS8DfS9N5bzMMX
l/I8MY2xz442raLwbqbIPWBZ3xjlMYrdjorHVh4ibSs81n/AUiVUm+f/OGHQ
tqdKlHg3U/cuHqoXWa3QVUryzrm9Tltidr46Ed0Hti9ysGElGbaguHxjW498
Ec1K86UlqxoOOI2aFe6QHQiR25MXji84smf4RJZXa467mqlOXgW2ZA9q7ZDU
dUYnWTvtbd1YSVUTK12t3mjehfxkItGak9dEO+f27/6EtUo+N1LZ8+jSxIgV
BMOULbpbPqRoIe3fLqzfR46xEGjnyGbJeuRAt20leaXuKWwZxDt667qYLK+s
xYyi4/KEtgizrY+h5IIH9J9RzO6xhvzxa+FRWk70hwVn6t5HBxpWS01a6lJS
s9PVm4leZTVSIfUq7hsmWjNOJW+f3+s0Y6dSIj8sQIaMjY11cciZJ1paWuhL
4aKzX9ifa9eupdBz9N/33ntvbjOvEFAW9nMtR3zPlIKI+TA/Yeal4sjykL5h
QpId8Pnnn9OfFAPQr+4I78IrLcwmJKy2bds2MDDALvT+++/L9iRlRzx69Ohq
IMroGOTV4iAb/XPohJCsExqDzkEsjp4duJ8wm6YAIMvMA5/NvMEDo6iB6ZBG
/5lR8omgFwgLBXT1CxPZjR8eHvYewLx99q8f/ehHt2/fnv3spYVcFlIiApZ5
IUaYjvj+++/nKpMREeOG2jGplDTOpS2vgI4JHrNj/2X1yw5jOlT5noksSl8e
vRoZGTkaiLzyKwV5tVhY2PLKmDjflB8y4JJd8MwFjzuQVwsdyKssgK5+YRIs
r+i/8Xj84cOHc5K9tAiQV4zOzk7tWMz8JCvySrvwyouYXak1C22hNR2LQV4t
DhaqvPr0v1Q8U8mnagQsdpgB8MwFjzuQVwsdyKssgK5+YRIgr8ivZj/n/1gP
ESyv5P/Ocui8DMiKvIq48IomEFJde/97+/btKIkEAHm1OFio8urW362M8fXL
hy4n/Y8CAKjMA3kFZpQZllcAPL5o5dXDhw/Ly8v9/O15S3R5NcsbP2VAVuQV
7ec7MjISfK3f/OY3Ih0mo5iaVi7HzJXZgrtvvvmGXf2tt95iKff29rLflXmD
AAAAAAAALCS88mpsbIxCCL7zzjtznbv0iC6vmpub5ySH0ZmOvGIqZomHY8eO
+V2LxqdkcnJytm/fzhoAawzTKcUnn3zCrisvy2LfTCdBAAAAAAAA5jOKvGKe
tgjN/fzzz8/cdbU7VfkRcaQpQF6xFNasWSP+O03VMAso8kobQUIEY/cbvYq+
TxlNBNXCdNZjsfIOAAAAAACAOUeWJMzHlrc9YvziF78ITYE58FevXk1r0peI
RxedKNHU5bL88pe//ILD8saUCM11XMLDy3/wwQfRszpXk9kUeRWKX+TAiDx6
9EjseuaFtYrpbCsMAAAAAADAIkHZX4n52IODg/I3wfHY+/r6MptJmNboldjm
OK2yKLB8sgO0YTqYBBsZGfnqq6+83yshHdgx7Mg//OEPaRU2AxR59e8e/t//
+39RArNHh1mGqWl5Ly2ZdevWZaVcAAAAAAAALGCUgA+kPuQvmb8dHDmQ4sLN
h716lYmOEWcYMsVEOmX//v3KvxR59ejRI3bkE088Mc3AgywnzKSvv/66V9AJ
srXvVQbcv3///fff37dvnzKehQEsAAAAAAAAgtFGDmSuO5Na4vvt27cHpEBh
vedDIL7QLZL9YNqQnTI4qIaD9o5esWIyedXZ2ZlxJpmIKy8vZ4ksCYxVPn15
NTIycowTmiWm8vwOk6dxpmVSAAAAAAAAFiF+kuT7778nCUAwN9svhVpOuted
6cmBaWmBd955h53iHaTzyis/IRadb775hikj0qQzKq+YYnrqqadYJYZmiTLj
NwtURL0YGHB2L6FJkoxHjx6Fpg8AAAAAAMAiIUCSMI9d/OvJJ5/Uut/MyV9i
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
mtZzR6is4e/Fk8IYPVnHH+L8gI6OxnX8mZ5btm/Y9dgqWv8z+1rm56X1JdJD
1hg9tTlmPa2cMlqZtKCe38mh+XlpQ5H0NDcn+Us5kco1PXmVvNBY4PK3PW6D
cf3wco0j5ELNf7PlVZbtGrLWIiQH2ktzRUVbloxW0Q9+d8wucsNyt7V/dZO3
gV2VMXrUNnaIeoytPylcxizVtRdj9MSGGPdV1vNLr+EV7TirxujpTYWWj2G2
z4Zq7hWUJZxi29ctKK5tYtfdsapQZD6s4MyouyvJyazj59Zyvyh/Q7d9fb7K
Q2TP+jRUTVdeJfsaSa/Z7WTy011xXsx1O5wGzPOcjrzyJOsl/HaLYnNq5CXr
XpJuN5dZHpzZarbnrlvytSf7GtmXZuyCKPIqzQav/zKr8kr0lsvfvE7tgwSX
fKd47B3eGyR//VPWocUqnjvU+/HHvbtrzGJuOG2dwTuc/AJWrc/2uLzdW13V
Hl3s7sytm7SgcpcwGU9tZXP7+gLrGOsmjW+X72PXLdnS8AyfubfplLs3SFNe
GdePVJHD7yuvovSTqeHOErVCqU+ubpCbtHrvhHdxgY9Cu0TbE6xN0k1qP2pr
Dg1P6lPQ2N/ObVWDf1an06GppmitJxEd3+M8RkJ6PLoNY/kFHkXPhS3k1cLj
0aNHiNsAgIfJgQR73JS8fFG8f0oOJMpcr1jlJx1/qyz1mtwJZ1338dv2Kzar
by969Uq015WsZz4iJswbo93rzQfKi7+mznzyw50Fig5iLmCT6T/s/jTlzZ5I
Wna06JERf7HPeQU3deu4mcn8rSJ0lC6HLik0vM9UUi+cc83td5+Vibzi9i+I
BY1eOQ5SqLxy5d+48pojD0nEFdf3OO6AMdb3IvM/ixKDk96sqhXtUxxRBNYG
DjvrHoyJfu4nCGWUpbr2cLPLdBJKE/1S8+VOtZV1um7ZTrnubx/n160/Q4Wj
h368/ZKTBDk5bndU18wmB9qL3IViJb8k3z4Pzm5hiVe+cc3lPbsd8vTlFb8u
d2DsdvLgbD07vkK5jjZlh/BkNYTeblFsrpctLrPQQFWVrK+4MSl2Qbi8SrfB
+xQwy/JKtM/qI0xg0bB1fuOFgAVD4b3BP596tqK4tLnfToREaMm+Yef4NYn2
NcrtbDb7WFX107JM4+K6ZEuvbLILO9m9UNw+MOmk5r7ZrQ7fjilhaZyqV684
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
LqRcX7pEhJqNLq9K1r0k9NGmEr6oh5YRpR/agk/Gq/zJGWrH/pXl1FHArRRk
JV5ZGnkll9oObaHm2jVHLmpNuTMT1pJl+2jlFX2WvfD396PMhJSr0rdSvOop
otm9nzTvx6Abn5G8cmC1N64F5BUAAAAAJMgNeOm9P//+6KZCeTV9+qMnxNS/
/P4N02uiZVOTQ3tK2QHxzQd6h/7p6+++o7e+usmB60/9xX2Zv5zakOeZQsZj
ednrMmQnPNKF0pFX9kS7cfXENEavpNEQ7yp43cJ/Gg3JZPRq/OyWArFUJ7K8
onl65ht+YyARo4lPaVtVa0bpQt61P0O7Y2L6aGjNptKQV+5jkv0vF1urk9Kf
HDj17e/f4COzR2/apbNnmvml4X8rCaYzelWwZ0g5RJqBlkZNCbIzerX68Mid
cy9X5svxKHwLm+nolTJuSCNT8gGNFwKXOUW9H4NufIsf/tT7k6UijIY+tAXk
FQAAALCIkReMDLQzD600MWg5SRmuvXK5ZzSmoKwZoWURirxSF27Q2hN7pQN5
ZW/3mbG81hwflWd8SYMgYReKLq+OX7An2nlOnI9rr86bgReKWy5ZNRddXtE6
l6a+b01rkyJO26oBxbF846M3Xd/S2qsmWrEUWrOpjOWVFcDN/DKDtVcugaMv
iGm9/KLKxne/cQqrvZWCrBR97ZW6mIvWKNHKrzRqyrlEFtde8dh9BXUnZEk5
O2uvjMGEHOJDLkVhvPrnn/vnX3c/Btz4HKpZKYRI0NqrED0OAAAAgAWJy3+g
qBQiGHVmkQNTxrU3Kuz3yTR9aPt5x820U/CEtpDfftuR04RvRt5jaTyWU33k
uoi2rAqBsAtFlldF8bJ8a6Kd98T5FzkwXlaaG2vsE0elIa9ofuDm+noRiiFt
qwYUR0QOdELW0zqdvKLEoBQ5MKhmUxnLq2mNXpnt+FClkIE85gYryPHbYtWN
HbtPG+NOuZWCrJRO5EBnRMyKsGfHLUyjpuQrZy9yoDFqRoHI33BalI0Gp5RR
6ZmIHEi7U5Um+p2drqwo+mnfj4E3vt2i5AN8LPP1qbocRA4EAAAAFieq/8B3
TYpbXp3ftjgrOu0YyJ6pO8qGQdacpdylzzS07rH3tcmvqamS/X/HsaHDrH1/
YptPC2fSXuXh8vo009iCL6SdaCS2Inr3psiM5NlqrRRmlhne90q1f64SSCEd
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
f4elYjacdpppyD3oX9E3f2Un+7N1xS5rUy8X3hvz7G1PsI6CDGhdPb/mkNPV
hte1Bnfn0/osr+jSxGBS/H93JSn3Ot4+KT5S/oZup+6V+7dpjZn5groTZhMe
OupqDCXrXrKr/t2bkQoe3mwyklfe+/ru6fUFTidMn5fWl8y+vFJuIncejNFT
m2OWDm11njjxdulhobujX9pQJCzw4OwW9nv10ZvypScvNLIvGy9MRrFnlGdW
JvJKc59GeDgCAMDsIOSV8cP/Pb/TfDYtf/O6oTumbGefs65k6vZx8/kipIH1
4jG2/rB4g2t7krZY464O69tfdJKxHvEiGgB1mCVbeqWn8dgFM1fF7QOT0oWo
5+ejIeaoh31wBvKKK8pYvvQS7MHZepbPijeued+3B8ur4OKTB+XyNGxnb/2p
v/jn3/0lPeiL63tkC/W9yJ4pRYnBSSvRI6a7W/3aZeeZkrx2uC4/KA6k9ik5
mHA8ismBRIm7gCljop9XX9m+YTszOiu58k9GcOn34X3F9uM7/CFrWazq1Sty
4d40HTZht6zIqwjlVd0wfkpBLGj0ik5Ze+yW/ULVGO123UeufBqXXy3JKX7t
sqhqbj3mHV2aUO4g93CztnQRmih/WeHWQcaNN01Ht+7U1wG2zX47iXIPZiKv
uBHyC2IB8srbIWjQ5H+8Z7NzSoR7MLCi7ez6t+TA3tga15CPsd7tiFnfEera
w+SHO82r1L1922m+XCuVvML7YOvt3IYjct1f4tct7bTqnl+XKbJ+pwmTS7y5
19WEfXvyoIJHaDYZyCvNfc1fE+VtP+/y2rUNcgbR3USuPFBB5AduaurWcX7L
qy9M3AZxWYAGqlwRe7id6S1ZBHtGeGZlIK8092mUCwEAwCzhnhvwn+oOj3he
9Fw/UuF5/KXsB6XV+1GHrHoINNWw/gx/807ySklm8sMXWW9f1Dls/kEvyjwX
okdGY9+kcyHe8yf7mvLd3X7a8orPFGLPmh7pxK9P1TmXc5KOIK8Ci//1mR+X
Fy1NKBPj3MmGyivyH7wW4oVqoizzR7/l8DgYgwn26Kk8ct2nACFuM72u9HiA
VH35iUFDVxxdocgmTcK6xpXXikSJhjtN92z3p/4m4lrMkw1joJ1lw46Ing15
FaW8bjfMGO4szY1tOdsraQ2Vb97dUVm6VGlarvtIzif3FuRVkNqxv/HeZ2Ol
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
Jr2J25/aE3cjGZan0D5gjF3au6mkkP0eW1axae9Fl+15KiM9bZvKi2I8cfOY
1l6XZXUYY591t26Mx+iUFQ0HlGSn7n3StXOlb2VxknfOHWxYTtctjNe19V6l
Q3g1aT923YW1KJb2tV47e65PYkBndm1deFtgyhjuLMtxnciuIypX/ijt0GO8
k/ZZBcXLGw45xovaDv3sTw1e+xFZYhXuGCdWqlb33ZO1dMrm3nF3vkXidlJa
MzoMJtymoCbtNikAAIBpseDVx4IvIADpY4ye2hyz3MjWPR2t9VzR5MTbB4QI
iSKvjNETG2Lcl17f2NGxp6XhGVMvLN10atR2DNOVV5O//mksp6Dm+Y6Od2/q
8pC80Mi99zB5VbLupY49HfzTZKmY9aciZ9t93Ztdy3Nyyza2dBwdenDzXTvZ
lzYUsWOqG6w/O9763YNIhuXZeyGRKGPH1DaJq8dWHByedKqne71ZzKXPmImw
IqwnzVLaOewvsIzRk3X5/NJmsh07VlGpT9qFSg7uqoyR697opCkdwI9JxLl7
X9XQ3NHR/Fxlvsj8zV/ZJf3ZumJ2zPJ660/TLNFa1GlXofjnpfUl05RXxvUj
VSRV7GPunuJ2KKyub+lw59lfXilNomkNL0vdCbJNpHYYYP8Hvztm56SBtaW8
ovU/szP2q5uacy3rxTafdm4kU17F8tlFFX1162hVLuQVAADMLxa8+lD2vQIA
WA5Y/MW+MeFZT906bjp4+VvPjsvHBMkr4/ph01esevWKMzCUvPam6aaKoZw0
5dV472b5/byah8mBRElOQSzC6JXIQEoka58SIdvydY0rrxTnFb16RdU1AVog
0LDW+Jd8jCVqlnfdsoppaszcssSANOBG/nzBniGfUltudrz90oSS7LM947bp
mLd/2BnFMyb6+QFl+yzRRteNrT9+2x62sdx+d/F1dRqh4MOdppLaft41ikiD
MtOQVzwz1CSsY4b3mUrqhXPu6+jaoQNX0HmliX7HeAPtpbm2lonSDkPsb6MZ
fbMVYvVrl+UWebguXzqSG6o2kahVEjRzXrC8qjJzeQUAACDrPOLMdS5mljnc
HxmAecj1w0/rZhnd6qrO00sMgcs55H5s8WuX3cLDGGhnbmHF4RuUSjryiguf
ghd/LUZx3HkwhjtLc2NbzvYm0pRXxuhxM52tZx9EzLZ03WRfU74jfORCaOwT
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
fxI12+ICX9frEjYeRTMxrEEjERpTfaogdeWqA9/6FJvvPIlVe5RbrbirWG2e
zZLc3JcbxZv8Zo+47cgHMiJd0hSn5KiN5fY/c0gtvVedhl+8tw4/Syevf/1L
x+CL8x4VXV6571e3DjfR8Qu0dDzPbG490xtyWV3X6ZzxWMU7m47XZWXSzUW4
iUWTVyA62gQtcyFA8mqewP2VW17xrLyo8qqwSHkVXLqoC69INbhn1vkRKtnU
6iDbjo+P8+dsQIZ0R/BJUqlU6MzG/ENbDA8P01cmczI5EqN7dZU7CcO2R/KK
DeL+yi2vyFx0JDXC0NP6QVmiwr799tuhjecRI2AeiPpI7Y+vPpFM6FEmHN0f
93QLnYEwMud+WVdd/8y//o2/1RwGR9fAPbLLs+FjWpzBuCPLK+FlKXmb6Gsp
K9GfDUqFuKU/451K5vKerN/ynBjPM7CJ5efoczy+2ZX14Zveu8WFcfTmYvJY
avvhPYrf+O2//6h+fqWVKx8jRJdXYuYVuVuHcueJaRbXh6HyKkZCN957LlGS
7H5vT6A7wXboOt3flSip6ZYrRSf6WrOn2qea2sSqocXRi8B+Fw/4avbPDHbX
lSaePdzrqKnpllcTH7R4zTKaOLk562x3DfhLZo+r2311imPsUPmRHGb9koxV
3R6WGTvVRqqndvtgjGwLXSOFj28p2IImhg1vJNfe+3G6uqpLb4WBAoFvlYt6
HGP2mXM/T9akf3jgb/aaWVep+bZjWXiwO6sNNznDcN7ofSZR9+S2M/8XmBOD
i/fawVWUw5YPnIbMT1553K+mrh1odPcOeVrP4IY8uL2mzNVObhxaV1X7xMsO
47kvK6NuzvwmBnk17QSHFwiA/MzHH3/cM5ad2xsnzRI6njLdyEh0AR7y/egL
r0gxfWFM6PCHn6gZGRlRZwkGzJfjyY2//vWvgxPKX15xwArzITkTeRV6KsmG
DRs89xrW5BVBpqDzxx54olxRQpQcqV3IKyfegdmXNXe8uu/jv2pLBKgX+v67
m9f+8unHx/busOfh2N3f2ZeyjwRfPOuTzsW3FmT71j3KQ9qpy3ueynUN3BHk
5vk4Z6d0O2KqRJNX/GTVMdnmqzfqPT1S9hysM+uTA3nyWMXSHYOObjXAJn6O
Mfs2lq3U3lz4nNVtp8c8fzg5fvPm8J8+/rj3X7a1WCsmYssrfkLe8M7ljGJM
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
      "], {{0, 628}, {1141, 0}}, {0, 255},
      ColorFunction->RGBColor],
     BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSize->{627., Automatic},
    ImageSizeRaw->{1141, 628},
    PlotRange->{{0, 1141}, {0, 628}}], ";"}]}]], "Input",
 Background->GrayLevel[
  0.85],ExpressionUUID->"d84df085-0254-4cac-8c3b-503ca633add3"],

Cell[BoxData[""], "Input",ExpressionUUID->"3dbbf349-ae4f-4674-9504-5a822594c386"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"1", " ", 
     RowBox[{
     "\:0448\:0430\:0433", ".", " ", "\:0412\:0432\:0435\:0434\:0443"}], " ", 
     "\:043d\:0435\:043e\:0431\:0445\:043e\:0434\:0438\:043c\:044b\:0435", 
     " ", "\:043a\:043e\:043d\:0441\:0442\:0430\:043d\:0442\:044b"}], ",", 
    " ", "\:043c\:0430\:0441\:0441\:0438\:0432\:044b", ",", " ", 
    "\:043c\:0430\:0442\:0440\:0438\:0446\:044b"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:0441\:0435\:0442\:043a\:0430", " ", 
     RowBox[{
     "\:0432\:0440\:0435\:043c\:0435\:043d\:0438", ".", " ", 
      "\:0412\:043e\:0437\:044c\:043c\:0443"}], " ", 
     "\:043e\:0442\:0440\:0435\:0437\:043e\:043a", " ", 
     RowBox[{"\:0432\:0440\:0435\:043c\:0435\:043d\:0438", " ", "[", 
      RowBox[{"0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "]"}]}], ",", " ", 
    RowBox[{
    "\:0447\:0442\:043e\:0431\:044b", " ", 
     "\:0441\:043c\:043e\:0434\:0435\:043b\:0438\:0440\:043e\:0432\:0430\:0442\
\:044c", " ", "\:043f\:043e\:043b\:043d\:044b\:0439", " ", 
     "\:0432\:0438\:0442\:043e\:043a", " ", 
     "\:0432\:0435\:043b\:043e\:0441\:0438\:043f\:0435\:0434\:0430"}], ",", 
    " ", 
    RowBox[{
    "\:0440\:0430\:0437\:043e\:0431\:044c\:044e", " ", "\:0435\:0433\:043e", 
     " ", "\:043d\:0430", " ", "n", " ", 
     "\:0447\:0430\:0441\:0442\:0435\:0439"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[CapitalDelta]t", ",", "n"}], "]"}], ";", 
    RowBox[{"ClearAll", "[", 
     RowBox[{"\[CapitalDelta]t", ",", "n"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalDelta]t", "=", 
     FractionBox[
      RowBox[{"2.", " ", "\[Pi]"}], "n"]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Standart", " ", "deviations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"\[Sigma]GPS", ",", "\[Sigma]S", ",", "\[Sigma]W"}], "]"}], ";", 
    RowBox[{"ClearAll", "[", 
     RowBox[{"\[Sigma]GPS", ",", "\[Sigma]S", ",", "\[Sigma]W"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Sigma]GPS", ",", "\[Sigma]S", ",", "\[Sigma]W"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.1", ",", "0.3"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Initial", " ", "conditions", " ", 
      RowBox[{"(", 
       RowBox[{"t", "=", "0"}], ")"}], "\[IndentingNewLine]", 
      "\:0431\:0435\:0440\:0443", " ", "\:0432", " ", 
      "\:043a\:0430\:0447\:0435\:0441\:0442\:0432\:0435", " ", 
      "\:0432\:0435\:043a\:0442\:043e\:0440\:0430", " ", 
      "\:0441\:043e\:0441\:0442\:043e\:044f\:043d\:0438\:044f", " ", 
      "\:0441\:0438\:0441\:0442\:0435\:043c\:044b", " ", "2", " ", 
      "\:043a\:043e\:043e\:0440\:0434\:0438\:043d\:0430\:0442\:044b", " ", 
      "xy"}], ",", " ", 
     RowBox[{
     "\:0442\:043a", " ", 
      "\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:0434\:043d\:044b\:0435", 
      " ", "\:043c\:043e\:0436\:043d\:043e", " ", 
      "\:0432\:044b\:0440\:0430\:0437\:0438\:0442\:044c", " ", 
      "\:044f\:0432\:043d\:043e", " ", "\:0447\:0435\:0440\:0435\:0437", " ", 
      "\:043d\:0438\:0445"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"t", ",", "InitState", ",", "InitError1", ",", "InitError2"}], 
     "]"}], ";", 
    RowBox[{"t", "=", "0."}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitState", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "t"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitError1", "=", 
     RowBox[{"(", GridBox[{
        {"10", "0"},
        {"0", "10"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "\:0434\:043e\:0432\:0435\:0440\:044f\:0442\:044c", " ", 
      "\:043d\:0430\:0447\:0430\:043b\:044c\:043d\:044b\:043c", " ", 
      "\:0434\:0430\:043d\:043d\:044b\:043c", " ", "\:043d\:0435", " ", 
      "\:0431\:0443\:0434\:0435\:043c"}], " ", "-", " ", 
     RowBox[{"\:0434\:0438\:0441\:043f\:0435\:0440\:0441\:0438\:044f", " ", 
      RowBox[{"\:0431\:043e\:043b\:044c\:0448\:0430\:044f", "!"}]}]}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"InitError2", "=", 
     RowBox[{"(", GridBox[{
        {"\[Sigma]GPS", "0"},
        {"0", "\[Sigma]GPS"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "...", " ", "\:043b\:0438\:0431\:043e", " ", 
      "\:0431\:0443\:0434\:0435\:043c", " ", 
      "\:0441\:0447\:0438\:0442\:0430\:0442\:044c"}], ",", " ", 
     RowBox[{
     "\:0447\:0442\:043e", " ", "\:0434\:0430\:043d\:043d\:044b\:0435", " ", 
      "\:043f\:043e\:043b\:0443\:0447\:0435\:043d\:044b", " ", "\:0441", " ", 
      "GPS"}], ",", " ", "\:043d\:0430\:043f\:0440\:0438\:043c\:0435\:0440", 
     ",", " ", 
     RowBox[{
     "\:043f\:0440\:0438", " ", 
      "\:043f\:0440\:0435\:0434\:044b\:0434\:0443\:0449\:0438\:0445", " ", 
      "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:044f\:0445"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "t", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041c\:0430\:0442\:0440\:0438\:0446\:0430", " ", 
     "\:043a\:043e\:0432\:0430\:0440\:0438\:0430\:0446\:0438\:0438", " ", 
     "\:0448\:0443\:043c\:043e\:0432", " ", 
     "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:0439"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "Q", "]"}], ";", 
    RowBox[{"ClearAll", "[", "Q", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Q", "=", 
     RowBox[{"(", GridBox[{
        {"\[Sigma]GPS", "0", "0", "0"},
        {"0", "\[Sigma]GPS", "0", "0"},
        {"0", "0", "\[Sigma]S", "0"},
        {"0", "0", "0", "\[Sigma]W"}
       }], ")"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "\:043a\:043e\:043d\:0441\:0442\:0430\:043d\:0442\:043d\:0430", " ", 
     "\:043d\:0430", " ", "\:043b\:044e\:0431\:043e\:043c", " ", 
     "\:0448\:0430\:0433\:0435"}], "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 Background->GrayLevel[
  0.85],ExpressionUUID->"bc40e62f-055c-428a-9f6e-44fd1eed17fb"],

Cell[BoxData[""], "Input",ExpressionUUID->"8e3a6d30-a647-4fe8-aa4a-c548ed8c55e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"2", " ", 
    RowBox[{"\:0448\:0430\:0433", ".", " ", "\:041d\:0430"}], " ", 
    "\:043e\:0441\:043d\:043e\:0432\:0435", " ", 
    "\:0432\:0432\:0435\:0434\:0435\:043d\:043d\:044b\:0445", " ", 
    "\:043d\:0430", " ", "1", " ", "\:0448\:0430\:0433\:0435", " ", 
    "\:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:044b\:0445", " ", 
    "\:0441\:043e\:0437\:0434\:0430\:043c", " ", 
    "\:0431\:043e\:043b\:0435\:0435", " ", 
    "\:0441\:043b\:043e\:0436\:043d\:044b\:0435", " ", 
    "\:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:044b\:0435"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:0428\:0443\:043c\:043e\:0432", " ", 
     "\:043f\:0440\:043e\:0446\:0435\:0441\:0441\:0430", " ", 
     "\:043d\:0435\:0442"}], ",", " ", 
    RowBox[{
    "\:043f\:043e\:044d\:0442\:043e\:043c\:0443", " ", "\:0432", " ", 
     "\:043c\:043e\:0434\:0435\:043b\:0438", " ", 
     "\:043f\:0435\:0440\:0435\:0445\:043e\:0434\:0430", " ", 
     "\:0432\:0435\:043a\:0442\:043e\:0440", " ", "w", " ", 
     RowBox[{
     "\:043e\:0442\:0441\:0443\:0442\:0441\:0442\:0432\:0443\:0435\:0442", 
      ".", "\[IndentingNewLine]", "\:0412"}], " ", 
     "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:044f\:0445"}], ",", 
    " ", "\:043d\:0430\:043f\:0440\:043e\:0442\:0438\:0432", ",", " ", 
    RowBox[{"\:0448\:0443\:043c\:044b", " ", 
     RowBox[{"\:0435\:0441\:0442\:044c", ".", " ", "\:041e\:043d\:0438"}], 
     " ", "\:043f\:043e\:0434\:0447\:0438\:043d\:044f\:044e\:0442\:0441\:044f\
", " ", "\:0433\:0430\:0443\:0441\:0441\:043e\:0432\:0441\:043a\:043e\:043c\
\:0443", " ", 
     RowBox[{
     "\:0440\:0430\:0441\:043f\:0440\:0435\:0434\:0435\:043b\:0435\:043d\:0438\
\:044e", ".", "\[IndentingNewLine]", "\:0421\:0434\:0435\:043b\:0430\:044e"}],
      " ", "\:0432\:0435\:043a\:0442\:043e\:0440", " ", "v"}], ",", " ", 
    RowBox[{
    "\:0432\:043d\:043e\:0441\:044f\:0449\:0438\:0439", " ", 
     "\:043f\:043e\:043c\:0435\:0445\:0438", " ", "\:0432", " ", 
     "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:044f", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "\:043c\:0430\:0442\:043e\:0436\:0438\:0434\:0430\:043d\:0438\:0435", 
        " ", "=", " ", "0"}], ",", " ", 
       RowBox[{
       "\:0434\:0438\:0441\:043f\:0435\:0440\:0441\:0438\:044f", " ", 
        "\:0437\:0430\:0434\:0430\:0435\:0442\:0441\:044f", " ", 
        "\:0438\:0437", " ", "\:0443\:0441\:043b\:043e\:0432\:0438\:0439", 
        " ", "\:0437\:0430\:0434\:0430\:0447\:0438"}]}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "v", "]"}], ";", 
    RowBox[{"ClearAll", "[", "v", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"v", "[", "]"}], ":=", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "\[Sigma]GPS"}], "]"}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "\:043f\:043e\:043c\:0435\:0445\:0430", " ", "\:0432", " ", 
         "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:0438", " ", "x", 
         " ", "\:043a\:043e\:043e\:0440\:0434\:0438\:043d\:0430\:0442\:044b"}]\
, "*)"}], "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "\[Sigma]GPS"}], "]"}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
        "\:043f\:043e\:043c\:0435\:0445\:0430", " ", "\:0432", " ", 
         "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:0438", " ", "y", 
         " ", "\:043a\:043e\:043e\:0440\:0434\:0438\:043d\:0430\:0442\:044b"}]\
, "*)"}], "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "\[Sigma]S"}], "]"}], "]"}], ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "\:043f\:043e\:043c\:0435\:0445\:0430", " ", "\:0432", " ", 
          "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:0438", " ", 
          "s"}], " ", "-", " ", 
         RowBox[{
         "\:043c\:043e\:0434\:0443\:043b\:044f", " ", 
          "\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:0438"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"NormalDistribution", "[", 
         RowBox[{"0", ",", "\[Sigma]W"}], "]"}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "\:043f\:043e\:043c\:0435\:0445\:0430", " ", "\:0432", " ", 
         "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:0438", " ", "w"}],
         " ", "-", " ", 
        RowBox[{
        "\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:0438", " ", 
         "\:043f\:043e\:0432\:043e\:0440\:043e\:0442\:0430", " ", 
         "\:0432\:0435\:043b\:043e\:0441\:0438\:043f\:0435\:0434\:0430"}]}], 
       "*)"}], "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "\:0441\:0433\:0435\:043d\:0435\:0440\:0438\:0440\:0443\:044e", " ", 
      "\:043d\:0430", " ", 
      "\:0432\:0432\:0435\:0434\:0435\:043d\:043d\:043e\:0439", " ", 
      "\:0441\:0435\:0442\:043a\:0435", " ", 
      "\:0432\:0440\:0435\:043c\:0435\:043d\:0438", " ", 
      "\:043c\:0430\:0441\:0441\:0438\:0432", " ", 
      "\:043d\:0430\:0431\:043b\:044e\:0434\:0435\:043d\:0438\:0439", " ", 
      "\:0437\:0430", " ", 
      "\:0441\:0438\:0441\:0442\:0435\:043c\:043e\:0439"}], ",", " ", 
     "\:0437\:043d\:0430\:044f", ",", " ", 
     RowBox[{
      RowBox[{
      "\:043a\:0430\:043a", " ", "\:043e\:043d\:0438", " ", 
       "\:0437\:0430\:0432\:0438\:0441\:044f\:0442", " ", "\:043e\:0442", " ",
        "\:0432\:0440\:0435\:043c\:0435\:043d\:0438", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "\:0441", " ", "\:043e\:0448\:0438\:0431\:043a\:0430\:043c\:0438", 
          " ", "\:0438\:0437\:043c\:0435\:0440\:0435\:043d\:0438\:0439", " ", 
          RowBox[{"v", "[", "]"}]}], ")"}], ".", "\[IndentingNewLine]", 
        "\:0417\:0430\:0432\:0438\:0441\:0438\:043c\:043e\:0441\:0442\:044c"}]\
, " ", "\:043d\:0430\:0431\:043b\:044e\:0434\:0430\:0435\:043c\:044b\:0445", 
       " ", "\:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:044b\:0445", 
       " ", 
       RowBox[{"(", GridBox[{
          {"x"},
          {"y"},
          {"s"},
          {"w"}
         }], ")"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"h", "[", 
        RowBox[{"(", GridBox[{
           {"x"},
           {"y"}
          }], ")"}], "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"v", "[", "]"}], "\[IndentingNewLine]", 
        "\:0417\:0434\:0435\:0441\:044c", " ", 
        "\:043c\:043e\:0434\:0443\:043b\:044c", " ", 
        "\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:0438", " ", 
        RowBox[{"(", "s", ")"}], " ", "\:0438", " ", 
        "\:0443\:0433\:043b\:043e\:0432\:0443\:044e", " ", 
        "\:0441\:043a\:043e\:0440\:043e\:0441\:0442\:044c", " ", 
        RowBox[{"(", "w", ")"}], " ", 
        "\:0432\:044b\:0440\:0430\:0437\:0438\:043b", " ", 
        "\:0447\:0435\:0440\:0435\:0437", " ", 
        "\:0432\:0440\:0435\:043c\:044f", " ", "\:0438", " ", 
        "\:0443\:043f\:0440\:043e\:0441\:0442\:0438\:043b", " ", 
        "\:0444\:0443\:043d\:043a\:0446\:0438\:0435\:0439", " ", 
        RowBox[{
         RowBox[{"Simplify", "[", "]"}], ".", "\[IndentingNewLine]", 
         "\:0422\:0435\:043c"}], " ", "\:0441\:0430\:043c\:044b\:043c", " ", 
        "\:043f\:043e\:043b\:0443\:0447\:0430\:044e", " ", 
        "\:043c\:0430\:0441\:0441\:0438\:0432"}]}]}], ",", " ", 
     RowBox[{
     "\:044d\:043b\:0435\:043c\:0435\:043d\:0442\:044b", " ", 
      "\:043a\:043e\:0442\:043e\:0440\:043e\:0433\:043e", " ", 
      "\:0431\:0443\:0434\:0443\:0442", " ", 
      "\:043f\:043e\:0434\:0441\:0442\:0430\:0432\:043b\:044f\:0442\:044c\
\:0441\:044f", " ", "\:0432", " ", "\:043a\:0430\:0436\:0434\:044b\:0439", 
      " ", "\:0448\:0430\:0433", " ", "\:0440\:0430\:0431\:043e\:0442\:044b", 
      " ", 
      RowBox[{"\:0444\:0438\:043b\:044c\:0442\:0440\:0430", "."}]}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "observations", "]"}], ";", 
    RowBox[{"ClearAll", "[", "observations", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"observations", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"Cos", "[", "t", "]"}]}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "t"}], "]"}], ",", 
          RowBox[{"2", " ", 
           SqrtBox[
            RowBox[{
             SuperscriptBox[
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "t"}], "]"}], "2"], "+", 
             SuperscriptBox[
              RowBox[{"Sin", "[", "t", "]"}], "2"]}]]}], ",", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "3"}], " ", 
             RowBox[{"Cos", "[", "t", "]"}]}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"3", " ", "t"}], "]"}]}], 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "t"}], "]"}], "-", 
            RowBox[{"Cos", "[", 
             RowBox[{"4", " ", "t"}], "]"}]}]]}], "}"}], "+", 
        RowBox[{"v", "[", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}], ",", "\[CapitalDelta]t"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "\:0434\:0438\:043d\:0430\:043c\:0438\:043a\:0430", " ", 
       "\:0441\:0438\:0441\:0442\:0435\:043c\:044b", " ", 
       SubscriptBox[
        RowBox[{"(", GridBox[{
           {"x"},
           {"y"}
          }], ")"}], "k"]}], " ", "=", " ", 
      RowBox[{"f", "[", 
       SubscriptBox[
        RowBox[{"(", GridBox[{
           {"x"},
           {"y"}
          }], ")"}], 
        RowBox[{"k", "-", "1"}]], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "\:0443\:043f\:0440\:0430\:0432\:043b\:0435\:043d\:0438\:044f", " ", 
        "\:043d\:0435\:0442", " ", 
        RowBox[{"(", 
         RowBox[{"u", " ", "=", " ", "0"}], ")"}], "\[IndentingNewLine]", 
        "\:0417\:0434\:0435\:0441\:044c", " ", "\:044f", " ", 
        "\:0432\:044b\:0440\:0430\:0437\:0438\:043b", " ", "xy", " ", 
        "\:0447\:0435\:0440\:0435\:0437", " ", "xy", " ", "\:043d\:0430", " ",
         "\:043f\:0440\:0435\:0434\:044b\:0434\:0443\:0449\:0435\:043c", " ", 
        RowBox[{
        "\:0448\:0430\:0433\:0435", ".", " ", 
         "\:041f\:043e\:043a\:0430\:0436\:0443"}], " ", "\:043d\:0430", " ", 
        "\:043f\:0440\:0438\:043c\:0435\:0440\:0435", " ", 
        RowBox[{"x", ":", "\[IndentingNewLine]", 
         SubscriptBox["x", 
          RowBox[{"k", "-", "1"}]]}]}], " ", "=", " ", 
       RowBox[{"2", 
        RowBox[{"Cos", "[", 
         SubscriptBox["t", 
          RowBox[{"k", "-", "1"}]], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["x", "k"], " ", "=", " ", 
       RowBox[{
        RowBox[{"2", 
         RowBox[{"Cos", "[", 
          RowBox[{
           SubscriptBox["t", 
            RowBox[{"k", "-", "1"}]], "+", "\[CapitalDelta]t"}], "]"}]}], " ",
         "=", " ", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"Cos", "[", 
           SubscriptBox["t", 
            RowBox[{"k", "-", "1"}]], "]"}], 
          RowBox[{"Cos", "[", "\[CapitalDelta]t", "]"}]}], "-", 
         RowBox[{"2", 
          RowBox[{"Sin", "[", 
           SubscriptBox["t", 
            RowBox[{"k", "-", "1"}]], "]"}], 
          RowBox[{"Sin", "[", "\[CapitalDelta]t", "]"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["y", "k"], " ", "=", " ", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"2", 
          SubscriptBox["t", "k"]}], "]"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"Sin", "[", 
           SubscriptBox["t", "k"], "]"}], 
          RowBox[{"Cos", "[", 
           SubscriptBox["t", "k"], "]"}]}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", 
            SubscriptBox["t", "k"], "]"}], "*", 
           SubscriptBox["x", "k"]}], "  ", "=", 
          RowBox[{
           RowBox[{">", "  ", 
            RowBox[{"Sin", "[", 
             SubscriptBox["t", "k"], "]"}]}], " ", "=", " ", 
           FractionBox[
            SubscriptBox["y", "k"], 
            SubscriptBox["x", "k"]]}]}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       SubscriptBox["x", "k"], " ", "=", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["x", 
          RowBox[{"k", "-", "1"}]], 
         RowBox[{"Cos", "[", "\[CapitalDelta]t", "]"}]}], "-", 
        RowBox[{"2", 
         FractionBox[
          SubscriptBox["y", 
           RowBox[{"k", "-", "1"}]], 
          SubscriptBox["x", 
           RowBox[{"k", "-", "1"}]]], 
         RowBox[{"Sin", "[", "\[CapitalDelta]t", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\:041d\:0430\:043f\:043e\:043c\:043d\:044e"}], ",", " ", 
     RowBox[{
     "\[CapitalDelta]t", " ", "\:043c\:044b", " ", 
      "\:0437\:0430\:0434\:0430\:043b\:0438", " ", "\:0432", " ", 
      "\:0441\:0430\:043c\:043e\:043c", " ", 
      RowBox[{"\:043d\:0430\:0447\:0430\:043b\:0435", ".", " ", 
       SubscriptBox["y", "k"]}], " ", 
      "\:0432\:044b\:0447\:0438\:0441\:043b\:044f\:0435\:0442\:0441\:044f", 
      " ", 
      RowBox[{
      "\:0430\:043d\:0430\:043b\:043e\:0433\:0438\:0447\:043d\:043e", 
       "."}]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "f", "]"}], ";", 
    RowBox[{"ClearAll", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"Cos", "[", "\[CapitalDelta]t", "]"}]}], "-", 
        RowBox[{"2", 
         FractionBox["y", "x"], 
         RowBox[{"Sin", "[", "\[CapitalDelta]t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"y", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", "\[CapitalDelta]t"}], "]"}]}], "+", 
        RowBox[{
         FractionBox[
          SuperscriptBox["x", "2"], "4"], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[CapitalDelta]t"}], "]"}]}], "-", 
        RowBox[{
         FractionBox[
          SuperscriptBox["y", "2"], 
          SuperscriptBox["x", "2"]], 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "\[CapitalDelta]t"}], "]"}]}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "\:0437\:0430\:0432\:0438\:0441\:0438\:043c\:043e\:0441\:0442\:044c", 
       " ", "\:043d\:0430\:0431\:043b\:044e\:0434\:0430\:0435\:043c\:044b\
\:0445", " ", "\:043f\:0435\:0440\:0435\:043c\:0435\:043d\:043d\:044b\:0445", 
       " ", 
       SubscriptBox[
        RowBox[{"(", GridBox[{
           {"x"},
           {"y"},
           {"s"},
           {"w"}
          }], ")"}], "k"]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"h", "[", 
        SubscriptBox[
         RowBox[{"(", GridBox[{
            {"x"},
            {"y"}
           }], ")"}], "k"], "]"}], " ", "+", " ", 
       RowBox[{
        RowBox[{"v", "[", "]"}], "\[IndentingNewLine]", 
        "\:0417\:0434\:0435\:0441\:044c", " ", 
        "\:0432\:044b\:0440\:0430\:0436\:0435\:043d\:0438\:0435", " ", "s", 
        " ", "\:0438", " ", "w", " ", "\:0447\:0435\:0440\:0435\:0437", " ", 
        "\:0445\:0443", " ", "\:043d\:0435", " ", 
        "\:0441\:0438\:043b\:044c\:043d\:043e", " ", 
        "\:043e\:0442\:043b\:0438\:0447\:0430\:0435\:0442\:0441\:044f", " ", 
        "\:043e\:0442", " ", "\:0442\:043e\:0433\:043e"}]}]}], ",", " ", 
     RowBox[{
     "\:0447\:0442\:043e", " ", "\:0431\:044b\:043b\:043e", " ", 
      "\:043f\:0440\:043e\:0434\:0435\:043b\:0430\:043d\:043e", " ", "\:0432",
       " ", 
      RowBox[{
       RowBox[{"f", "[", "]"}], ".", " ", "\:042f"}], " ", 
      "\:043c\:043e\:0433\:0443", " ", 
      "\:0432\:044b\:0440\:0430\:0437\:0438\:0442\:044c", " ", 
      SubscriptBox[
       RowBox[{"(", 
        FractionBox["dx", "dt"], ")"}], "k"], " ", "\:0438", " ", 
      SubscriptBox[
       RowBox[{"(", 
        FractionBox["dy", "dt"], ")"}], "k"], " ", 
      "\:0447\:0435\:0440\:0435\:0437", " ", 
      SubscriptBox["x", "k"], " ", "\:0438", " ", 
      SubscriptBox["y", "k"]}], ",", " ", 
     RowBox[{
     "\:043a\:0430\:043a", " ", "\:0438", " ", 
      "\:0431\:043e\:043b\:0435\:0435", " ", 
      "\:0432\:044b\:0441\:0448\:0438\:0435", " ", 
      RowBox[{
      "\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:0434\:043d\:044b\:0435", 
       ".", " ", "\:0410"}], " ", "\:0443\:0436\:0435", " ", 
      "\:0447\:0435\:0440\:0435\:0437", " ", 
      "\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:0434\:043d\:044b\:0435", 
      " ", "\:043c\:043e\:0433\:0443", " ", 
      "\:0432\:044b\:0440\:0430\:0437\:0438\:0442\:044c", " ", "\:0438", " ", 
      "s"}], ",", 
     RowBox[{"w", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
         "\:0441\:043c", ".", " ", 
          "\:0443\:0441\:043b\:043e\:0432\:0438\:044f"}], " ", 
         "\:0437\:0430\:0434\:0430\:0447\:0438"}], ")"}], ".", " ", 
       "\:0423\:043f\:0440\:043e\:0449\:0430\:044e"}], " ", 
      "\:0447\:0435\:0440\:0435\:0437", " ", 
      RowBox[{
       RowBox[{"Simplify", "[", "]"}], "."}]}]}], " ", "\[IndentingNewLine]", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "h", "]"}], ";", 
    RowBox[{"ClearAll", "[", "h", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"h", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", 
       SqrtBox[
        RowBox[{
         FractionBox[
          SuperscriptBox["x", "4"], "4"], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["y", "2"]}], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["y", "2"]}], 
          SuperscriptBox["x", "2"]], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           SuperscriptBox["y", "4"]}], 
          SuperscriptBox["x", "4"]]}]], ",", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["x", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["x", "4"], "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["y", "2"]}]}], ")"}]}], 
        RowBox[{
         SuperscriptBox["x", "8"], "+", 
         RowBox[{"16", " ", 
          SuperscriptBox["x", "2"], " ", 
          SuperscriptBox["y", "2"]}], "-", 
         RowBox[{"8", " ", 
          SuperscriptBox["x", "4"], " ", 
          SuperscriptBox["y", "2"]}], "+", 
         RowBox[{"16", " ", 
          SuperscriptBox["y", "4"]}]}]]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041d\:0435\:043e\:0431\:0445\:043e\:0434\:0438\:043c\:044b\:0435", " ",
      "\:043c\:0430\:0442\:0440\:0438\:0446\:044b", " ", 
     RowBox[{"\:042f\:043a\:043e\:0431\:0438", "."}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"F", " ", "\[Equal]", " ", 
     RowBox[{
      RowBox[{
       FractionBox[
        StyleBox[
         RowBox[{"\[PartialD]", "f"}], "OperatorCharacter"], 
        StyleBox[
         RowBox[{"\[PartialD]", "x"}], "OperatorCharacter"]], ".", " ", 
       "\:041f\:0440\:043e\:0441\:0442\:043e"}], " ", 
      "\:0431\:0435\:0440\:0443", " ", 
      "\:0447\:0430\:0441\:0442\:043d\:044b\:0435", " ", 
      RowBox[{
      "\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:0434\:043d\:044b\:0435", 
       "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "F", "]"}], ";", 
    RowBox[{"ClearAll", "[", "F", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"F", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          RowBox[{"Cos", "[", "\[CapitalDelta]t", "]"}], "+", 
          FractionBox[
           RowBox[{"2", " ", "y", " ", 
            RowBox[{"Sin", "[", "\[CapitalDelta]t", "]"}]}], 
           SuperscriptBox["x", "2"]]}], 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", 
            RowBox[{"Sin", "[", "\[CapitalDelta]t", "]"}]}], "x"]}]},
        {
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", "x", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[CapitalDelta]t"}], "]"}]}], "+", 
          FractionBox[
           RowBox[{"2", " ", 
            SuperscriptBox["y", "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[CapitalDelta]t"}], "]"}]}], 
           SuperscriptBox["x", "3"]]}], 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[CapitalDelta]t"}], "]"}], "-", 
          FractionBox[
           RowBox[{"2", " ", "y", " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[CapitalDelta]t"}], "]"}]}], 
           SuperscriptBox["x", "2"]]}]}
       }], ")"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"H", " ", "\[Equal]", " ", 
     RowBox[{
      RowBox[{
       FractionBox[
        StyleBox[
         RowBox[{"\[PartialD]", "h"}], "OperatorCharacter"], 
        StyleBox[
         RowBox[{"\[PartialD]", "x"}], "OperatorCharacter"]], ".", " ", 
       "\:041f\:0440\:043e\:0441\:0442\:043e"}], " ", 
      "\:0431\:0435\:0440\:0443", " ", 
      "\:0447\:0430\:0441\:0442\:043d\:044b\:0435", " ", 
      RowBox[{
      "\:043f\:0440\:043e\:0438\:0437\:0432\:043e\:0434\:043d\:044b\:0435", 
       ".", " ", "Ave"}], " ", 
      RowBox[{"Mathematica", "!"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "H", "]"}], ";", 
    RowBox[{"ClearAll", "[", "H", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"H", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1", "0"},
         {"0", "1"},
         {
          FractionBox[
           RowBox[{
            SuperscriptBox["x", "8"], "-", 
            RowBox[{"8", " ", 
             SuperscriptBox["x", "2"], " ", 
             SuperscriptBox["y", "2"]}], "-", 
            RowBox[{"16", " ", 
             SuperscriptBox["y", "4"]}]}], 
           RowBox[{
            SuperscriptBox["x", "5"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["x", "4"], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["y", "2"]}], "+", 
              FractionBox[
               RowBox[{"16", " ", 
                SuperscriptBox["y", "2"]}], 
               SuperscriptBox["x", "2"]], "+", 
              FractionBox[
               RowBox[{"16", " ", 
                SuperscriptBox["y", "4"]}], 
               SuperscriptBox["x", "4"]]}]]}]], 
          FractionBox[
           RowBox[{"4", " ", "y", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["x", "2"]}], "-", 
              SuperscriptBox["x", "4"], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["y", "2"]}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["x", "4"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["x", "4"], "-", 
              RowBox[{"8", " ", 
               SuperscriptBox["y", "2"]}], "+", 
              FractionBox[
               RowBox[{"16", " ", 
                SuperscriptBox["y", "2"]}], 
               SuperscriptBox["x", "2"]], "+", 
              FractionBox[
               RowBox[{"16", " ", 
                SuperscriptBox["y", "4"]}], 
               SuperscriptBox["x", "4"]]}]]}]]},
         {
          RowBox[{"-", 
           FractionBox[
            RowBox[{"2", " ", 
             SuperscriptBox["x", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x", "12"], "-", 
               RowBox[{"80", " ", 
                SuperscriptBox["x", "6"], " ", 
                SuperscriptBox["y", "2"]}], "+", 
               RowBox[{"84", " ", 
                SuperscriptBox["x", "8"], " ", 
                SuperscriptBox["y", "2"]}], "-", 
               RowBox[{"192", " ", 
                SuperscriptBox["x", "2"], " ", 
                SuperscriptBox["y", "4"]}], "-", 
               RowBox[{"208", " ", 
                SuperscriptBox["x", "4"], " ", 
                SuperscriptBox["y", "4"]}], "-", 
               RowBox[{"576", " ", 
                SuperscriptBox["y", "6"]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x", "8"], "+", 
               RowBox[{"16", " ", 
                SuperscriptBox["x", "2"], " ", 
                SuperscriptBox["y", "2"]}], "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["x", "4"], " ", 
                SuperscriptBox["y", "2"]}], "+", 
               RowBox[{"16", " ", 
                SuperscriptBox["y", "4"]}]}], ")"}], "2"]]}], 
          RowBox[{"-", 
           FractionBox[
            RowBox[{"16", " ", 
             SuperscriptBox["x", "3"], " ", "y", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["x", "6"]}], "-", 
               RowBox[{"5", " ", 
                SuperscriptBox["x", "8"]}], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["x", "4"], " ", 
                SuperscriptBox["y", "2"]}], "+", 
               RowBox[{"48", " ", 
                SuperscriptBox["y", "4"]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["x", "8"], "+", 
               RowBox[{"16", " ", 
                SuperscriptBox["x", "2"], " ", 
                SuperscriptBox["y", "2"]}], "-", 
               RowBox[{"8", " ", 
                SuperscriptBox["x", "4"], " ", 
                SuperscriptBox["y", "2"]}], "+", 
               RowBox[{"16", " ", 
                SuperscriptBox["y", "4"]}]}], ")"}], "2"]]}]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.7]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
      Function[BoxForm`e$, 
       MatrixForm[BoxForm`e$]]]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 Background->GrayLevel[
  0.85],ExpressionUUID->"f2c0afbf-1afe-4404-b65a-5c16e525d727"],

Cell[BoxData[""], "Input",ExpressionUUID->"c99eb389-44cb-438a-acce-d614cd523f61"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"3", " ", 
      RowBox[{
      "\:0448\:0430\:0433", ".", " ", "\:041f\:0438\:0448\:0435\:043c"}], " ",
       "\:0444\:0438\:043b\:044c\:0442\:0440", " ", 
      "\:041a\:0430\:043b\:043c\:0430\:043d\:0430"}], " ", "-", " ", 
     RowBox[{
     "\:0441\:043d\:0430\:0447\:0430\:043b\:0430", " ", 
      "\:043f\:0440\:0435\:0434\:0438\:043a\:0442\:043e\:0440"}]}], ",", " ", 
    RowBox[{
    "\:0437\:0430\:0442\:0435\:043c", " ", 
     "\:043a\:043e\:0440\:0440\:0435\:043a\:0442\:043e\:0440"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\:0428\:0430\:0433", " ", 
    RowBox[{
    "3.1", ".", " ", 
     "\:041f\:0440\:0435\:0434\:0441\:043a\:0430\:0437\:0430\:043d\:0438\:0435\
"}], " ", "\:0441\:043e\:0441\:0442\:043e\:044f\:043d\:0438\:044f", " ", 
    "\:0441\:0438\:0441\:0442\:0435\:043c\:044b", " ", "\:0438", " ", 
    "\:0435\:0435", " ", "\:043e\:0448\:0438\:0431\:043e\:043a", " ", 
    "\:0432", " ", "\:0441\:043b\:0435\:0434\:0443\:044e\:0449\:0438\:0439", 
    " ", "\:043c\:043e\:043c\:0435\:043d\:0442", " ", 
    "\:0432\:0440\:0435\:043c\:0435\:043d\:0438"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "PredictionStep", "]"}], ";", 
    RowBox[{"ClearAll", "[", "PredictionStep", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PredictionStep", "[", 
      RowBox[{"{", 
       RowBox[{"state_", ",", "P_"}], "}"}], "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"f", "[", "state", "]"}], ",", 
       RowBox[{
        RowBox[{"F", "[", "state", "]"}], ".", "P", ".", 
        RowBox[{"Transpose", "[", 
         RowBox[{"F", "[", "state", "]"}], "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"\:0428\:0430\:0433", " ", 
     RowBox[{
     "3.2", ".", " ", 
      "\:0423\:0442\:043e\:0447\:043d\:0435\:043d\:0438\:0435"}], " ", 
     "\:0438", " ", "\:043f\:043e\:043b\:0443\:0447\:0435\:043d\:0438\:0435", 
     " ", "\:043e\:043a\:043e\:043d\:0447\:0430\:0442\:0435\:043b\:044c\:043d\
\:043e\:0433\:043e", " ", 
     "\:0441\:043e\:0441\:0442\:043e\:044f\:043d\:0438\:044f", " ", 
     "\:0441\:0438\:0441\:0442\:0435\:043c\:044b", " ", "\:0438", " ", 
     "\:0435\:0435", " ", "\:043e\:0448\:0438\:0431\:043e\:043a", " ", 
     "\:0432", " ", "\:0441\:043b\:0435\:0434\:0443\:044e\:0449\:0438\:0439", 
     " ", "\:043c\:043e\:043c\:0435\:043d\:0442", " ", 
     "\:0432\:0440\:0435\:043c\:0435\:043d\:0438"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "CorrectionStep", "]"}], ";", 
    RowBox[{"ClearAll", "[", "CorrectionStep", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CorrectionStep", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"State_", ",", "P_"}], "}"}], ",", "Observation_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"state", "=", "State"}], ",", 
        RowBox[{"p", "=", "P"}], ",", 
        RowBox[{"z", "=", "Observation"}], ",", "S", ",", "K", ",", "nextP", 
        ",", "nextState"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"S", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"H", "[", "state", "]"}], ".", "p", ".", 
          RowBox[{"Transpose", "[", 
           RowBox[{"H", "[", "state", "]"}], "]"}]}], "+", "Q"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"K", "=", 
        RowBox[{"p", ".", 
         RowBox[{"Transpose", "[", 
          RowBox[{"H", "[", "state", "]"}], "]"}], ".", 
         RowBox[{"Inverse", "[", "S", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nextP", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", "2", "]"}], "-", 
           RowBox[{"K", ".", 
            RowBox[{"H", "[", "state", "]"}]}]}], ")"}], ".", "p"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nextState", "=", 
        RowBox[{"state", "+", 
         RowBox[{"K", ".", 
          RowBox[{"(", 
           RowBox[{"z", "-", 
            RowBox[{"h", "[", "state", "]"}]}], ")"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"nextState", ",", "nextP"}], "}"}]}]}], "\[IndentingNewLine]",
      "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"\:0428\:0430\:0433", " ", 
     RowBox[{"3.3", ".", " ", "\:0414\:043b\:044f"}], " ", 
     "\:0443\:0434\:043e\:0431\:0441\:0442\:0432\:0430", " ", 
     "\:043e\:0431\:044a\:0435\:0434\:0438\:043d\:0438\:043c", " ", 
     "\:043e\:0431\:0430", " ", "\:0448\:0430\:0433\:0430", " ", "\:0432", 
     " ", "\:043e\:0434\:0438\:043d"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "Step", "]"}], ";", 
    RowBox[{"ClearAll", "[", "Step", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Step", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PrevState_", ",", "PrevP_"}], "}"}], ",", "Observation_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"prevState", "=", "PrevState"}], ",", 
        RowBox[{"prevP", "=", "PrevP"}], ",", 
        RowBox[{"z", "=", "Observation"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"CorrectionStep", "[", 
       RowBox[{
        RowBox[{"PredictionStep", "[", 
         RowBox[{"{", 
          RowBox[{"prevState", ",", "prevP"}], "}"}], "]"}], ",", "z"}], 
       "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:0444\:0438\:043b\:044c\:0442\:0440", " ", 
     "\:0431\:0435\:0440\:0435\:0442", " ", "\:0432\:043e", " ", 
     "\:0432\:0445\:043e\:0434", " ", 
     "\:043f\:0440\:0435\:0434\:044b\:0434\:0443\:0449\:0438\:0435", " ", 
     "\:0441\:043e\:0441\:0442\:043e\:044f\:043d\:0438\:0435", " ", "\:0441", 
     " ", "\:043a\:043e\:0432\:0430\:0440\:0438\:0430\:0446\:0438\:043e\:043d\
\:043d\:043e\:0439", " ", "\:043c\:0430\:0442\:0440\:0438\:0446\:0435\:0439", 
     " ", "\:043e\:0448\:0438\:0431\:043e\:043a", " ", "\:0438", " ", 
     "\:043d\:0430\:0431\:043b\:044e\:0434\:0435\:043d\:0438\:0435", " ", 
     "\:0438", " ", "\:0432\:044b\:0434\:0430\:0435\:0442", " ", 
     "\:043d\:043e\:0432\:044b\:0435", " ", 
     "\:0441\:043e\:0441\:0442\:043e\:044f\:043d\:0438\:0435", " ", "\:0438", 
     " ", "\:043a\:043e\:0432\:0430\:0440\:0438\:0430\:0446\:0438\:043e\:043d\
\:043d\:0443\:044e", " ", "\:043c\:0430\:0442\:0440\:0438\:0446\:0443"}], 
    "*)"}]}]}]], "Input",
 InitializationCell->True,
 Background->GrayLevel[
  0.85],ExpressionUUID->"8e9b22fe-d9a2-4ca0-a6f0-07c9c01fe3d8"],

Cell[BoxData[""], "Input",ExpressionUUID->"5f95a079-a517-4f88-9a43-8b0ed1fdfb27"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"4", " ", 
    RowBox[{
    "\:0448\:0430\:0433", ".", " ", 
     "\:041e\:043f\:0440\:043e\:0431\:0443\:0435\:043c"}], " ", 
    "\:0444\:0438\:043b\:044c\:0442\:0440"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:0421\:0434\:0435\:043b\:0430\:0435\:043c", " ", 
     "\:0442\:043e\:0447\:043d\:0443\:044e", " ", 
     "\:0442\:0440\:0430\:0435\:043a\:0442\:043e\:0440\:0438\:044e", " ", 
     "\:0432\:0435\:043b\:043e\:0441\:0438\:043f\:0435\:0434\:0430"}], ",", 
    " ", 
    RowBox[{
    "\:0447\:0442\:043e\:0431\:044b", " ", "\:0431\:044b\:043b\:043e", " ", 
     "\:0441", " ", "\:0447\:0435\:043c", " ", 
     "\:0441\:0440\:0430\:0432\:043d\:0438\:0442\:044c"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "ExactData", "]"}], ";", 
    RowBox[{"ClearAll", "[", "ExactData", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ExactData", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", "t"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"2", "Pi"}], ",", "\[CapitalDelta]t"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041f\:043e\:043b\:0443\:0447\:0438\:043c", " ", 
     "\:0440\:0435\:0430\:043b\:044c\:043d\:044b\:0435", " ", 
     "\:0434\:0430\:043d\:043d\:044b\:0435", " ", 
     "\:0447\:0435\:0440\:0435\:0437", " ", 
     "\:0444\:0438\:043b\:044c\:0442\:0440"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"currentState", ",", "currentP", ",", "FilterData"}], "]"}], ";", 
    RowBox[{"ClearAll", "[", 
     RowBox[{"currentState", ",", "currentP", ",", "FilterData"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"currentState", ",", "currentP"}], "}"}], "=", 
     RowBox[{"{", 
      RowBox[{"InitState", ",", "InitError1"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FilterData", "=", 
     RowBox[{
      RowBox[{"Reap", "[", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "100"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Sow", "[", 
           RowBox[{"{", 
            RowBox[{"currentState", ",", "currentP"}], "}"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"currentState", ",", "currentP"}], "}"}], "=", 
           RowBox[{"Step", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"currentState", ",", "currentP"}], "}"}], ",", 
             RowBox[{
             "observations", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:0412\:044b\:0447\:043b\:0435\:043d\:044e", " ", 
     "\:043a\:043e\:043e\:0440\:0434\:0438\:043d\:0430\:0442\:044b", " ", 
     "\:0438", " ", "\:043c\:0430\:0442\:0440\:0438\:0446\:044b", " ", 
     "\:043a\:043e\:0432\:0430\:0440\:0438\:0430\:0446\:0438\:0438"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"RealData", ",", "PData"}], "]"}], ";", 
    RowBox[{"ClearAll", "[", 
     RowBox[{"RealData", ",", "PData"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RealData", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "FilterData", "]"}], "\[LeftDoubleBracket]", 
      "1", "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PData", "=", 
     RowBox[{
      RowBox[{"Transpose", "[", "FilterData", "]"}], "\[LeftDoubleBracket]", 
      "2", "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "\:041c\:043e\:0436\:043d\:043e", " ", "\:0442\:0430\:043a\:0436\:0435", 
     " ", "\:043f\:043e\:043b\:0443\:0447\:0438\:0442\:044c", " ", 
     "\:043d\:0435\:0444\:0438\:043b\:044c\:0442\:0440\:043e\:0432\:0430\:043d\
\:043d\:044b\:0435", " ", "\:0434\:0430\:043d\:043d\:044b\:0435", " ", 
     "\:043d\:0430\:0431\:043b\:044e\:0434\:0435\:043d\:0438\:0439"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "NonfilterData", "]"}], ";", 
    RowBox[{"ClearAll", "[", "NonfilterData", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NonfilterData", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], "}"}],
        "&"}], "/@", "observations"}]}], ";"}]}]}]], "Input",
 InitializationCell->True,
 Background->GrayLevel[
  0.85],ExpressionUUID->"9e3a7d7c-d20a-4caf-953a-9ef5d73295f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "\:0412\:043e\:0442", " ", 
    "\:0440\:0435\:0437\:0443\:043b\:044c\:0442\:0430\:0442"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ExactData", ",", "RealData", ",", "NonfilterData"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"Opacity", "[", "0.8", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", "0.8", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Orange", ",", "Dashed"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<exact (theory)\>\"", ",", "\"\<filtered\>\"", ",", 
       "\"\<unfiltered (observations)\>\""}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Medium"}], "]"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",Expre\
ssionUUID->"994eeb5e-90fc-4171-8ba4-4670d9b713a6"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1:eJxdVF1IU2EYnk2IFoVmOoc/FeFNRV1GMHiFIrwQs21WamZoo4soCRphQeiF
2Vo/kJXFUqiLUuqyP3T07srwItYPMgpLzZmuDUcx0ep4TnXe5wzOBuPbt3O+
93ve5+fd1NLm8q6wWCzef9//Kz6Vxg91d4zHUhpNNt5vStjCZP3Y4TnOGt1e
Wfo7fyxC2qqKJzOnNHIMDlQ1XI/SZHle2QNVJdcgH14z9oU0z56CtW0qHWnw
5W6OfKVYQ6pvKLxM6zfm10VmZyhQOD5+MK3Q9xONrasH5qg+3Fnz1KbQxe3H
tOHcBNY/dEV/L0kD6d7g2elfqDtPcf3cEnCkqOjle+tz9yIJ7hQV6PcsZPbD
Oc/UEW+aVLzfpOP6malXu7XYeaHiB3AlaZ/exzx1Ac+9zorRRUpk8Nr1vmdp
Hfqpje/YmRqZpmb0e1PnaYJqwYfvnNVbqkSp0OBL5/Ut9YLPMz2TJbaCMH0C
38vvfN+S216EjPW8POcpec4xOc/9cp47pD5vkPp8R+5nt9zPLsHHRwUfi26z
DD24T/rjhPTHHumfL0n/7BZ++Jrww+CPwR+HhF+GHqi7wOCf7aJPZi/3LDH0
4EeiL1vqpB70Z+jP8AdDD/yv8Bzwzoi/OA/9SB2V69Ev/MnwJ3BqbAdf8DcH
wCf8zxHwjViERY/XTuP5Z3M++C70VFG/zJwPPmTOB7fAL9PA7zDng7Pywd3w
Yxf4uQq/PgR/OcIfzYFfi82UD87KR2Y/BP2MfDRDX+hBNdDfj/v2wx9GXnvg
nxjwFsFf+egny3/khz/3go92+NeYJ2/g79Pg8yT8/wF82y73V+9qHwphdd5A
fpag1wTydQt6BpC/LdA7iHwegB+qkd9G+KUc+S6Gn4LIfxx+q8d8CMCPLswP
6MGtmC9W+PkV5g/04Kz5xA7Mr2VzPox5xY8x/xTkrRvz0W/OB8Ef8IVCMXM+
jHkFn6jkQb9TmN9V5nxQiTkf5DPng6LmfFRKPqLOv1RaWMI=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.8]], 
        LineBox[CompressedData["
1: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
UIxP52VrWrooUOWu/i5uiRD/A7irb/0=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.011111111111111112`], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0.5, 0], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
lA==
         "]]}}}, {}, {}, {{}, {}}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{-2.145502145959401, 
      2.1797866650113993`}, {-1.111090417345965, 1.1241730900185698`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 600, LabelStyle -> Directive[
       GrayLevel[0], Medium], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-2.145502145959401, 
      2.1797866650113993`}, {-1.111090417345965, 1.1241730900185698`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"exact (theory)\"", "\"filtered\"", "\"unfiltered (observations)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.8]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.8]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.1], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[
           GrayLevel[0], Medium], FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[0, 0, 1]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.8`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "RGBColor[1, 0.5, 0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0]"], Appearance -> None, 
                   BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Medium"}], "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",ExpressionU\
UID->"dfd5a9de-3acc-4023-98dc-a0330b820346"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:0422\:0435\:043f\:0435\:0440\:044c", " ", 
     "\:043f\:043e\:0441\:043c\:043e\:0442\:0440\:0438\:043c"}], ",", " ", 
    RowBox[{
    "\:043a\:0430\:043a", " ", 
     "\:043c\:0435\:043d\:044f\:0435\:0442\:0441\:044f", " ", "\:0441", " ", 
     "\:0442\:0435\:0447\:0435\:043d\:0438\:0435\:043c", " ", 
     "\:0432\:0440\:0435\:043c\:0435\:043d\:0438", " ", 
     "\:043d\:043e\:0440\:043c\:0430", " ", 
     "\:043c\:0430\:0442\:0440\:0438\:0446", " ", 
     RowBox[{"P", ".", " ", "\:0412\:043e\:0437\:044c\:043c\:0443"}], " ", 
     "\:0437\:0430", " ", "\:043d\:043e\:0440\:043c\:0443", " ", 
     "\:043d\:0430\:0438\:0431\:043e\:043b\:044c\:0448\:0438\:0439", " ", 
     "\:043f\:043e", " ", "\:043c\:043e\:0434\:0443\:043b\:044e", " ", 
     "\:044d\:043b\:0435\:043c\:0435\:043d\:0442"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "NormP", "]"}], ";", 
    RowBox[{"ClearAll", "[", "NormP", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NormP", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Norm", "[", "#", "]"}], "&"}], "/@", "PData"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListLogPlot", "[", 
    RowBox[{"NormP", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\:2116 \:0448\:0430\:0433\:0430\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(k\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Medium"}], "]"}]}], ",", 
     RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"GridLinesStyle", "\[Rule]", "Dotted"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",Expression\
UUID->"13c491c6-ebfa-4794-8dbd-46fdd31e8209"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw90g1Q03Ucx/EF3CSkgoHIwwR50AgBQYR45sMYMGDANhiQZsXDTJQYh8jD
FbU8YBDY8aACB8jVMC6wdpxHnGI0kAiaBaQFFleZqElUgAge2FGdvy+72+1e
e+/7e/jfHDOUMoUBh8PJ+u/9/+eT10KYlby3v+eYAdgXsJ54z+H3DgPdExrj
uUWfhqOOxsxm2NC82e9lb8psCffp6ssrD59ltsZvrdlF3nozZj6kP90yOsvl
Me+EiKdr6NlmweyEg497XJcsLJldIDa8ofMw3Ma8G9Xj0rHzX5BdEbdcYNcb
a8XshqYI7ljCJ2R3/BNq3PXG32RPtM/crec4b2f2QktLhuueeLI3usIeqI8c
I+/DqcS3VupLyT4IqP+ma7+avB+85S1t31eSfaE3WXv//Gb3w2LzlNqjnPwi
Ao28XfRlZH9IZrWCsk0HYOBwuMB2cz4QLZm9EwM15CA8vbRL09dIDkabYDD4
1CvkEAxNX/+q1p8ciqm8vcI+C3IYCouEMdUr9DyA/Phzwa23mVWA/szOlK0z
1MOxYNSZtPgr9XBElATFXViiLsAhRVRmAI+trxLgUZTjQWE47RcBH5Mbfuq3
qUdgRj3vf2CYuhDPRIeUWW61Zl2IIxXXkJ/IzImEbNRq7WQj9UgMzVX84DZH
PQq/+D115arIhvUoVN7zKpZrmTnR4D0YKVu3tWU9GhVXGk80VDFzRDhtsmEu
fkRdhFfTJIHHs+xYj8E4f6laMsasikFOVXlooC2f9Vi0JY/PXQtjVsXC5pLd
3iI/6nEY+VhY02xNPQ6RW9ZFHau0vhjvfhv18M5NWl+M+fS7QfmD1ONRqpwM
T9VSj0fwlwJ+goZ6AuqMPbVObdQT0K9uHjVspZ6I3HbFwOF26onI6mn7rKuT
ugSrtSVlNr3MkMC5yO+d/BH6vQQbC9kKOZ1PJ4Hfcc3QxB80L4XitVvx+Y9p
XopO8/XvLprQfaXwUF6sCrJi1kmRo9Ocft2eno8Mvjn1eSJnZsjAnR39S7mL
5mXIVa7XjZJ1MrR+bvppoQvNJ+G+2Gy4xJHmkzBZVHChm9ZXJSEjtnD3/at0
/iQMdiVw84rp/MmIm1Vrfw6h8yfDq5afWcOj+ydDeY/PXVll/w9dMtptpU59
f9L/Rw7lRwe0EcvMkIMnd+9+wZTm5cguCp1v8qX95bgzd/3s0TzaPwWWldt7
Cvtp/xRc2nFzas2czp+CdCMHm+kcun8KQrOEY7dH6f6p0Ofqmz9w28HmU1Fn
XTzTd4ZZlYqR6Y3Zc1x7Np+K50vLm7pPMHPSIPjaM7PgR2akofnQpMRsjwOb
T8OH+4bTTV9m1qVhXlOR3qFg5ryEy1X6rDSxg+5fkz/KKQ==
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\:2116 \:0448\:0430\:0433\:0430\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(k\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, -8.586087333535637},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->FrontEndValueCache[{Automatic, 
     Charting`ScaledTickValues[{Log, Exp}]}, {Automatic, {{-6.907755278982137, 
       Directive[
        AbsoluteThickness[0.1]]}, {-4.605170185988091, 
       Directive[
        AbsoluteThickness[0.1]]}, {-2.3025850929940455`, 
       Directive[
        AbsoluteThickness[0.1]]}, {0., 
       Directive[
        AbsoluteThickness[0.1]]}, {2.302585092994046, 
       Directive[
        AbsoluteThickness[0.1]]}}}],
  GridLinesStyle->Dashing[{0, Small}],
  ImagePadding->All,
  ImageSize->500,
  LabelStyle->Directive[
    GrayLevel[0], Medium],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 100.}, {-8.41325126327326, 2.302585092994046}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-6.907755278982137, 
       FormBox["0.001`", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.010\"", 0.01, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-9.210340371976182, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-8.517193191416238, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-8.111728083308073, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.824046010856292, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.600902459542082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.418580902748128, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.264430222920869, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-7.013115794639964, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-6.214608098422191, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.809142990314028, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.521460917862246, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-5.115995809754082, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.961845129926823, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-4.710530701645918, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.916290731874155, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {0.6931471805599453, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.0106352940962555`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}], Selectable -> False], TraditionalForm], {0.005, 
       0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",ExpressionUUID->"d762a3af-\
308e-4915-a22c-f9b92d03fa33"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "\:0422\:043e\:0447\:043d\:043e\:0441\:0442\:044c", " ", 
    "\:0443\:0432\:0435\:043b\:0438\:0447\:0438\:0432\:0430\:0435\:0442\:0441\
\:044f", " ", "\:0441", " ", "\:0448\:0430\:0433\:043e\:043c"}], ",", " ", 
   RowBox[{
   "\:0447\:0442\:043e", " ", "\:0445\:043e\:0440\:043e\:0448\:043e"}]}], 
  "*)"}]], "Input",ExpressionUUID->"11cb541a-9425-4676-88df-43cda3aa4672"]
},
WindowSize->{1120, 626},
Visible->True,
ScrollingOptions->{"VerticalScrollRange"->Fit},
ShowCellBracket->Automatic,
CellContext->Notebook,
TrackCellChangeTimes->False,
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[1464, 33, 120240, 1985, 409, "Input", "ExpressionUUID" -> \
"d84df085-0254-4cac-8c3b-503ca633add3"],
Cell[121707, 2020, 81, 0, 30, "Input", "ExpressionUUID" -> \
"3dbbf349-ae4f-4674-9504-5a822594c386"],
Cell[121791, 2022, 6615, 161, 714, "Input", "ExpressionUUID" -> \
"bc40e62f-055c-428a-9f6e-44fd1eed17fb",
 InitializationCell->True],
Cell[128409, 2185, 81, 0, 30, "Input", "ExpressionUUID" -> \
"8e3a6d30-a647-4fe8-aa4a-c548ed8c55e5"],
Cell[128493, 2187, 27748, 695, 1798, "Input", "ExpressionUUID" -> \
"f2c0afbf-1afe-4404-b65a-5c16e525d727",
 InitializationCell->True],
Cell[156244, 2884, 81, 0, 30, "Input", "ExpressionUUID" -> \
"c99eb389-44cb-438a-acce-d614cd523f61"],
Cell[156328, 2886, 6839, 159, 627, "Input", "ExpressionUUID" -> \
"8e9b22fe-d9a2-4ca0-a6f0-07c9c01fe3d8",
 InitializationCell->True],
Cell[163170, 3047, 81, 0, 30, "Input", "ExpressionUUID" -> \
"5f95a079-a517-4f88-9a43-8b0ed1fdfb27"],
Cell[163254, 3049, 5364, 135, 608, "Input", "ExpressionUUID" -> \
"9e3a7d7c-d20a-4caf-953a-9ef5d73295f0",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[168643, 3188, 1330, 35, 140, "Input", "ExpressionUUID" -> \
"994eeb5e-90fc-4171-8ba4-4670d9b713a6"],
Cell[169976, 3225, 22765, 458, 362, "Output", "ExpressionUUID" -> \
"dfd5a9de-3acc-4023-98dc-a0330b820346"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192778, 3688, 1909, 44, 177, "Input", "ExpressionUUID" -> \
"13c491c6-ebfa-4794-8dbd-46fdd31e8209"],
Cell[194690, 3734, 21857, 562, 315, "Output", "ExpressionUUID" -> \
"d762a3af-308e-4915-a22c-f9b92d03fa33"]
}, Open  ]],
Cell[216562, 4299, 430, 9, 30, "Input", "ExpressionUUID" -> \
"11cb541a-9425-4676-88df-43cda3aa4672"]
}
]
*)

(* End of internal cache information *)

(* NotebookSignature KxThekHpzLhIvAwD0oOMl3iX *)
